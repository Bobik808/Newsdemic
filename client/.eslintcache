[{"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx":"1","D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts":"2","D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx":"3","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx":"4","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx":"5","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx":"6","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts":"7","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts":"8","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts":"9","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts":"10","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts":"11","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts":"12","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts":"13","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts":"14","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts":"15","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts":"16","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts":"17","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.js":"18","D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts":"19","D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx":"20"},{"size":478,"mtime":1612347362504,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1612199487710,"results":"23","hashOfConfig":"22"},{"size":1744,"mtime":1612624410780,"results":"24","hashOfConfig":"22"},{"size":675,"mtime":1612621391360,"results":"25","hashOfConfig":"22"},{"size":1710,"mtime":1612622123259,"results":"26","hashOfConfig":"22"},{"size":898,"mtime":1612621578859,"results":"27","hashOfConfig":"22"},{"size":700,"mtime":1612621391359,"results":"28","hashOfConfig":"22"},{"size":1821,"mtime":1612602940399,"results":"29","hashOfConfig":"22"},{"size":316,"mtime":1612623445222,"results":"30","hashOfConfig":"22"},{"size":2511,"mtime":1612622137847,"results":"31","hashOfConfig":"22"},{"size":310,"mtime":1612549212420,"results":"32","hashOfConfig":"22"},{"size":4397,"mtime":1612621578861,"results":"33","hashOfConfig":"22"},{"size":12427,"mtime":1612549212423,"results":"34","hashOfConfig":"22"},{"size":2608,"mtime":1612622088670,"results":"35","hashOfConfig":"22"},{"size":10165,"mtime":1612621578861,"results":"36","hashOfConfig":"22"},{"size":3004,"mtime":1612621578862,"results":"37","hashOfConfig":"22"},{"size":2972,"mtime":1612549212423,"results":"38","hashOfConfig":"22"},{"size":1432,"mtime":1612622528959,"results":"39","hashOfConfig":"22"},{"size":1745,"mtime":1612621578863,"results":"40","hashOfConfig":"22"},{"size":646,"mtime":1612621578857,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kpgg80",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx",[],["87","88"],"D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx",["89","90","91","92","93","94","95","96"],"import React, { useEffect, useState } from 'react';\nimport { Box, Grommet } from 'grommet';\n// import { Box, Button, Grommet, Card, CardHeader, CardBody, CardFooter, Meter } from 'grommet';\n// import { Notification } from 'grommet-icons';\nimport './App.css';\nimport './socket-io-client/socket-io-client';\nimport { Provider, useSelector } from 'react-redux';\nimport { RootState, store } from './redux/gameState/store';\nimport { getGames } from './socket-io-client/socket-io-client';\n// import { CureDeck } from './components/CureDeck/CureDeck';\nimport { CureDeck } from './components/CureDeck/CureDeck';\nimport { getIcon } from './helpers/iconExporter'\nimport { SourceCard } from './components/SourceCard/SourceCard';\nimport { CardHand } from './components/CardHand/CardHand';\nimport { NewGameMenu } from './components/NewGameMenu/NewGameMenu'\n\nfunction App() {\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  useEffect(() => {\n    getGames();\n  }, []);\n\n\n  return (\n    // <Grommet theme={grommet} full>\n    <Provider store={store}>\n\n      {/* <CureDeck /> */}\n\n      <div className=\"app-container\">\n        <><div className=\"sidebar-left\">\n          <CardHand>\n            <div className=\"source-card-hand\">\n              <SourceCard name='whatsapp' category=\"social\" />\n              <SourceCard name='whatsapp' category=\"social\" />\n              <SourceCard name='whatsapp' category=\"social\" />\n              <SourceCard name='whatsapp' category=\"social\" />\n            </div>\n          </CardHand>\n        </div>\n          <div className=\"board-container\">\n          </div></>\n      </div>\n      {/* ultimately aternery as to whether a player exists or not */}\n      <NewGameMenu />\n\n    </Provider>\n  );\n}\n\nexport default App;\n","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts",["97","98","99","100","101"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../types/gameStateTypes'\n\nexport const initDummyState: Gamestate = {\n  sources: [\n    {\n      name: 'University',\n      misinfoType: 'blue',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Gym',\n      misinfoType: 'red',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Instagram',\n      misinfoType: 'yellow',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n  ],\n  players: [\n    {\n      name: 'Player 1',\n      id: '1234',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'green',\n      currentSource: 'University',\n      room:'1',\n    },\n    {\n      name: 'Player 2',\n      id: '5678',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'purple',\n      currentSource: 'University',\n      room:'1',\n\n    },\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n      sourceName: null,\n      misinfoType: null,\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n}","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.js",["102","103","104","105","106","107","108","109"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\nimport { SourceCard, SourceCardProps } from '../SourceCard/SourceCard';\nimport { RootState, store } from '../../redux/gameState/store'\nimport { DefaultRootState, useSelector } from 'react-redux';\nimport { Gamestate } from '../../types/gameStateTypes';\n// import { initDummyState } from '../../logic/dummyState.REDO_CO'\n\n\n\n// const gamestate = useSelector((state: RootState) => state.GameState.connectionDeck)\n// state.player[playerIndex].cards = []\n\n\nexport const CardHand: React.FC = () => { // SVGIcon\n  // const cards: Card[] = useSelector((state: RootState) => state.GameState.players[0].cards)\n  const cards: SourceCardType[] = [\n    {\n      cardType: 'connection',\n      sourceName: 'high school',\n      misinfoType: 'community',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'tiktok',\n      misinfoType: 'social',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'fran from hr',\n      misinfoType: 'relations',\n    },\n  ]\n\n  // push dummy card to hand //! UNDO\n\n\n\n\n  const renderCards = (cardArray: SourceCardType[]) => {\n    return cardArray.map(card => {\n      console.log(card)\n      return <SourceCard name={card.sourceName} category={card.misinfoType} />\n    })\n  }\n\n  return (\n    <div className=\"source-card-hand\">\n      {renderCards(cards)}\n    </div>\n  )\n}\n\n",["110","111"],"D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"120","line":2,"column":15,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"121","line":7,"column":20,"nodeType":"118","messageId":"119","endLine":7,"endColumn":31},{"ruleId":"116","severity":1,"message":"122","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"124","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":17},{"ruleId":"116","severity":1,"message":"125","line":18,"column":10,"nodeType":"118","messageId":"119","endLine":18,"endColumn":21},{"ruleId":"116","severity":1,"message":"126","line":18,"column":23,"nodeType":"118","messageId":"119","endLine":18,"endColumn":37},{"ruleId":"116","severity":1,"message":"127","line":3,"column":21,"nodeType":"118","messageId":"119","endLine":3,"endColumn":25},{"ruleId":"116","severity":1,"message":"128","line":3,"column":27,"nodeType":"118","messageId":"119","endLine":3,"endColumn":33},{"ruleId":"116","severity":1,"message":"129","line":3,"column":35,"nodeType":"118","messageId":"119","endLine":3,"endColumn":41},{"ruleId":"116","severity":1,"message":"130","line":3,"column":43,"nodeType":"118","messageId":"119","endLine":3,"endColumn":57},{"ruleId":"116","severity":1,"message":"131","line":3,"column":59,"nodeType":"118","messageId":"119","endLine":3,"endColumn":69},{"ruleId":"132","severity":1,"message":"124","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"134","line":4,"column":22,"nodeType":"118","messageId":"119","endLine":4,"endColumn":37},{"ruleId":"132","severity":1,"message":"122","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":19},{"ruleId":"132","severity":1,"message":"135","line":5,"column":21,"nodeType":"118","messageId":"119","endLine":5,"endColumn":26},{"ruleId":"132","severity":1,"message":"136","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":26},{"ruleId":"132","severity":1,"message":"121","line":6,"column":28,"nodeType":"118","messageId":"119","endLine":6,"endColumn":39},{"ruleId":"132","severity":1,"message":"137","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":19},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Grommet' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'CureDeck' is defined but never used.","'getIcon' is defined but never used.","'showSidebar' is assigned a value but never used.","'setShowSidebar' is assigned a value but never used.","'Card' is defined but never used.","'Source' is defined but never used.","'Player' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.","no-unused-vars","'toCamelCase' is defined but never used.","'SourceCardProps' is defined but never used.","'store' is defined but never used.","'DefaultRootState' is defined but never used.","'Gamestate' is defined but never used.","no-global-assign","no-unsafe-negation"]