[{"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx":"1","D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts":"2","D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx":"3","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts":"4","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx":"5","D:\\thesis\\Viral\\Viral\\client\\src\\components\\StartGame.tsx":"6","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx":"7","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts":"8","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts":"9","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts":"10","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts":"11","D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx":"12","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx":"13","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts":"14","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts":"15","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts":"16","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\initialState.tsx":"17","D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx":"18","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx":"19","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx":"20","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CureDeck\\CureDeck.tsx":"21","D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx":"22","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx":"23","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx":"24","D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx":"25","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx":"26","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx":"27","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts":"28","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts":"29","D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPawn\\PlayerPawn.tsx":"30","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts":"31","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\DebunkModal.tsx":"32","D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts":"33","D:\\thesis\\Viral\\Viral\\client\\src\\components\\OtherPlayer\\OtherPlayer.tsx":"34","D:\\thesis\\Viral\\Viral\\client\\src\\components\\GameOn.tsx":"35","D:\\thesis\\Viral\\Viral\\client\\src\\components\\GameOver\\gameOver.tsx":"36","D:\\thesis\\Viral\\Viral\\client\\src\\components\\YouWon\\youWon.tsx":"37"},{"size":500,"mtime":1612871791381,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1612199487710,"results":"40","hashOfConfig":"39"},{"size":415,"mtime":1612870019717,"results":"41","hashOfConfig":"39"},{"size":2987,"mtime":1612900019866,"results":"42","hashOfConfig":"39"},{"size":1966,"mtime":1612954127241,"results":"43","hashOfConfig":"39"},{"size":2295,"mtime":1612900083924,"results":"44","hashOfConfig":"39"},{"size":706,"mtime":1612804814879,"results":"45","hashOfConfig":"39"},{"size":3115,"mtime":1612899328483,"results":"46","hashOfConfig":"39"},{"size":2857,"mtime":1612900372278,"results":"47","hashOfConfig":"39"},{"size":707,"mtime":1612870411289,"results":"48","hashOfConfig":"39"},{"size":369,"mtime":1612871914371,"results":"49","hashOfConfig":"39"},{"size":3652,"mtime":1612965836026,"results":"50","hashOfConfig":"39"},{"size":738,"mtime":1612862362153,"results":"51","hashOfConfig":"39"},{"size":3243,"mtime":1612899328484,"results":"52","hashOfConfig":"39"},{"size":14913,"mtime":1612900019865,"results":"53","hashOfConfig":"39"},{"size":12389,"mtime":1612900019864,"results":"54","hashOfConfig":"39"},{"size":1523,"mtime":1612779415808,"results":"55","hashOfConfig":"39"},{"size":349,"mtime":1612862362178,"results":"56","hashOfConfig":"39"},{"size":377,"mtime":1612862362154,"results":"57","hashOfConfig":"39"},{"size":960,"mtime":1612900166436,"results":"58","hashOfConfig":"39"},{"size":1090,"mtime":1612862362151,"results":"59","hashOfConfig":"39"},{"size":1476,"mtime":1612966669240,"results":"60","hashOfConfig":"39"},{"size":860,"mtime":1612871791380,"results":"61","hashOfConfig":"39"},{"size":943,"mtime":1612900610081,"results":"62","hashOfConfig":"39"},{"size":662,"mtime":1612966669249,"results":"63","hashOfConfig":"39"},{"size":1759,"mtime":1612871791378,"results":"64","hashOfConfig":"39"},{"size":6972,"mtime":1612966777448,"results":"65","hashOfConfig":"39"},{"size":4909,"mtime":1612966669261,"results":"66","hashOfConfig":"39"},{"size":556,"mtime":1612863569089,"results":"67","hashOfConfig":"39"},{"size":674,"mtime":1612966669246,"results":"68","hashOfConfig":"39"},{"size":11513,"mtime":1612870970131,"results":"69","hashOfConfig":"39"},{"size":3972,"mtime":1612900610079,"results":"70","hashOfConfig":"39"},{"size":1761,"mtime":1612899328486,"results":"71","hashOfConfig":"39"},{"size":2733,"mtime":1612862362157,"results":"72","hashOfConfig":"39"},{"size":3971,"mtime":1612966669242,"results":"73","hashOfConfig":"39"},{"size":128,"mtime":1612900019856,"results":"74","hashOfConfig":"39"},{"size":149,"mtime":1612900019863,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1kpgg80",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx",[],["165","166"],"D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx",["167"],"//based on change of state \nimport io from \"socket.io-client\";\nimport * as dotenv from 'dotenv';\nimport { store } from '../redux/gameState/store'\nimport { GetAllGamesAction, updateGameState } from \"../redux/gameState/gameStateActions\";\nimport { Gamestate } from \"../types/gameStateTypes\";\nimport { Play } from \"grommet-icons\";\ndotenv.config({ path: __dirname + '../.env' });\nconst socket = io(process.env.SERVER_URL || 'http://localhost:3002');\n\n\nconst Player = store.getState().playerStateReducer\n\n// on click - 'start game' \nexport const joinRoom = (player: typeof Player) => {\n  socket.emit('joinRoom', player);\n}\n\n// Message from server // welcome component \nsocket.on('joinConfirmation', (message: string) => {\n  console.log(message); // display message to the screen \n\n});\n\n//subscripion to any game state changes \n\nstore.subscribe(() => {\n  const newState = store.getState().gameStateReducer\n  const Player = store.getState().playerStateReducer\n  // console.log(newState, 'NEW STATE FROM SUBSCRIBE ')\n  // console.log(Player, 'PLAYER')\n  if (!newState.received && Player && newState.gameOn) {\n    socket.emit('onChangeState', { newState, Player })\n  }\n})\n\n// const addPlayer = (player: typeof Player) => {\n//   socket.emit('addPlayerToGame', player)\n// }\n\n\n//data coming from backend after game state changed\nsocket.on('updatedState', (newState: Gamestate) => {\n  console.log('newstate from client ', newState)\n  newState.received = true;\n  store.dispatch(updateGameState(newState))\n})\n\nexport const getGame = (player: typeof Player) => {\n  // console.log(player, 'PLAYER ON GET GAME - WILL BE ADDED HERE')\n  player && socket.emit('retriveGame', player)\n\n}\n\nexport const getGames = () => {\n  socket.emit('getGames')\n  socket.on('games', (\n    (data: string[]) => {\n      store.dispatch(GetAllGamesAction(data))\n    }\n  ))\n}\ngetGames();\n\n\n\n// how to we tell the users \nsocket.on('userLeft', (message: string) => console.log(message)) // need a end game button ","D:\\thesis\\Viral\\Viral\\client\\src\\components\\StartGame.tsx",["168","169","170","171","172","173","174","175","176"],"\nimport React, { useEffect, useState } from 'react';\n// import { Box, Button, Grommet, Card, CardHeader, CardBody, CardFooter, Meter } from 'grommet';\n// import { Notification } from 'grommet-icons';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { RootState, store } from '../redux/gameState/store';\nimport { getGame, getGames, joinRoom } from '../socket-io-client/socket-io-client';\nimport { CureDeck } from '../components/CureDeck/CureDeck';\nimport { getIcon } from '../helpers/iconExporter'\n\n\nimport { NewGameMenu } from '../components/NewGameMenu/NewGameMenu'\nimport { addPlayerToGameState, DealCardsToNewPlayerAction, StartGameAction } from '../redux/gameState/gameStateActions';\nimport { Gamestate, Player } from '../types/gameStateTypes';\n\nimport { GameOn } from './GameOn';\n\nimport { GameOver } from './GameOver/gameOver'\nimport { Winner } from './YouWon/youWon'\n\nexport const StartGame: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n  // const [showSidebar, setShowSidebar] = useState(false);\n  const player = useSelector((state: RootState) => state.playerStateReducer)\n  const allRooms = useSelector((state: RootState) => state.allGamesStateReducer)\n  const [stateRendered, updateStateRendered] = useState(false)\n  // let gameOn: boolean = false;\n  let state = useSelector((state: RootState) => state.gameStateReducer)\n\n  const startGame = (player: Player) => {\n    if (!stateRendered) {\n      joinRoom(player)\n      if (allRooms.filter(room => room === player.room).length > 0) {\n        getGame(player);\n        updateStateRendered(true)\n      } else {\n        dispatch(StartGameAction([player]))\n        updateStateRendered(true)\n      }\n    }\n  }\n\n\n  const MapSVG = getIcon('map');\n  // const addPlayer = () => {\n  //   dispatch(addPlayerToGameState(player, gamestate))\n  // }\n\n  return (\n\n    <div>\n      {state.gameWon ?\n        <Winner /> :\n        state.gameLost ?\n          <GameOver /> :\n          (player.name.length < 1) ?\n            <NewGameMenu />\n            : (\n              (!stateRendered) ?\n                <h1>\n                  game loading ...\n          {startGame(player)}\n                </h1>\n                :\n                <GameOn rendered={stateRendered} />\n            )\n      }\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts",["177"],"import { ClearmisinfoProps, CLEAR_MISINFO, DebunkMisinfoProps, DEBUNK_MISINFO, discardCardProps, DISCARD_ACTION, logOnOffProps, LOG_ON_OFF, MoveActionProps, MOVE_ACTION, ShareCardProps, SHARE_CARD, UPDATE_GAME_STATE, GameStateActionTypes, PlayerStateActionTypes, ADD_PLAYER, GET_ALL_GAMES, AllGamesActionTypes, START_GAME, ADD_PLAYER_TO_GAME, DEAL_CARDS, dealCardsProp } from './reduxTypes';\nimport { Gamestate, Player, } from '../../types/gameStateTypes'\nimport { gameStateReducer } from './gameStateReducer';\n//Below are example of actions with typescript.\n// we need to create an action for each reduced case\n\n\nexport function moveAction(props: MoveActionProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, location } = props\n  return {\n    type: MOVE_ACTION,\n    payload: { oldState, currentPlayerID, location }\n  }\n}\n\n\n\nexport function clearMisinfoAction(props: ClearmisinfoProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, location, misinfoType } = props;\n  return {\n    type: CLEAR_MISINFO,\n    payload: { oldState, currentPlayerID, location, misinfoType }\n  }\n}\n\n\nexport function shareCardAction(props: ShareCardProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, recipient, sharedCard } = props;\n  return {\n    type: SHARE_CARD,\n    payload: { oldState, currentPlayerID, recipient, sharedCard }\n  }\n}\n\nexport function logOnOffAction(props: logOnOffProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, location, usedCard } = props;\n  return {\n    type: LOG_ON_OFF,\n    payload: { oldState, currentPlayerID, location, usedCard }\n  }\n}\nexport function debunkMisinfoAction(props: DebunkMisinfoProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, usedCards, misinfoType } = props;\n  return {\n    type: DEBUNK_MISINFO,\n    payload: { oldState, currentPlayerID, usedCards, misinfoType }\n  }\n}\n\nexport function discardCardAction(props: discardCardProps): GameStateActionTypes {\n  const { oldState, currentPlayerID, discardedCard } = props;\n  return {\n    type: DISCARD_ACTION,\n    payload: { oldState, currentPlayerID, discardedCard }\n  }\n}\n//redux action to update whole gameState // examples\nexport function updateGameState(gameState: Gamestate): GameStateActionTypes {\n  return {\n    type: UPDATE_GAME_STATE,\n    payload: gameState\n  }\n}\n\nexport function AddPlayerAction(name: string, color: string, room: string): PlayerStateActionTypes {\n  return {\n    type: ADD_PLAYER,\n    payload: { name, color, room }\n  }\n}\n\nexport function GetAllGamesAction(array: string[]): AllGamesActionTypes {\n  return {\n    type: GET_ALL_GAMES,\n    payload: array\n  }\n}\n\n\nexport function StartGameAction(players: Player[]): GameStateActionTypes {\n  return {\n    type: START_GAME,\n    payload: players\n  }\n}\n\nexport function addPlayerToGameState(player: Player): GameStateActionTypes {\n  return {\n    type: ADD_PLAYER_TO_GAME,\n    payload: { player }\n  }\n}\n\n\nexport function DealCardsToNewPlayerAction(props: dealCardsProp): GameStateActionTypes {\n  const { player, state } = props;\n  return {\n    type: DEAL_CARDS,\n    payload: { player, state }\n  }\n}","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts",["178","179","180"],"import { ADD_PLAYER_TO_GAME, CLEAR_MISINFO, DEAL_CARDS, DEBUNK_MISINFO, DISCARD_ACTION, GameStateActionTypes, LOG_ON_OFF, MOVE_ACTION, SHARE_CARD, START_GAME, UPDATE_GAME_STATE } from './reduxTypes';\nimport { initialState } from './initialState'\nimport { Gamestate } from '../../types/gameStateTypes'\nimport { clearMisinfo, debunkMisinfo, discardCard, logOnOff, moveAction, shareCard } from '../../logic/actions.newState_CO'\nimport { addPlayerToGame, dealCardsToNewPlayer, setUp } from '../../logic/actions.MW';\nimport { Console } from 'console';\n//here should be a initial State of the Game\nconst GameState: Gamestate = initialState;\n// const GameState: Gamestate = gameState;\n\nexport function gameStateReducer(\n  state = GameState,\n  action: GameStateActionTypes\n): Gamestate {\n  switch (action.type) {\n    case MOVE_ACTION: {\n      const ap = action.payload;\n      const newstate = moveAction(ap.oldState, ap.currentPlayerID, ap.location)\n      return { ...state, ...newstate, received: false };\n    }\n    case CLEAR_MISINFO: {\n      const ap = action.payload;\n      // return {...clearMisinfo(ap.oldState, ap.currentPlayerID, ap.misinfoType, ap.location),  ...state, received: false }}\n      const newState = { ...state, received: false }\n      return { ...newState, ...clearMisinfo(ap.oldState, ap.currentPlayerID, ap.misinfoType, ap.location) }\n    }\n\n    case SHARE_CARD: {\n      const ap = action.payload;\n      const newstate = shareCard(ap.oldState, ap.currentPlayerID, ap.recipient, ap.sharedCard)\n      return { ...state, ...newstate, received: false };\n    }\n    case LOG_ON_OFF: {\n      const ap = action.payload;\n      const newstate = logOnOff(ap.oldState, ap.currentPlayerID, ap.location, ap.usedCard)\n      return { ...state, ...newstate, received: false };\n    }\n    case DEBUNK_MISINFO: {\n      const ap = action.payload;\n      const newstate = debunkMisinfo(ap.oldState, ap.currentPlayerID, ap.usedCards, ap.misinfoType)\n      return { ...state, ...newstate, received: false };\n    }\n    case DISCARD_ACTION: {\n      const ap = action.payload;\n      const newstate = discardCard(ap.oldState, ap.currentPlayerID, ap.discardedCard)\n      return { ...state, ...newstate, received: false };\n    }\n\n    case UPDATE_GAME_STATE:\n      return {\n        ...state, ...action.payload\n      }\n\n    case DEAL_CARDS: {\n      const ap = action.payload;\n      const newstate = dealCardsToNewPlayer(ap.player, ap.state)\n      console.log(\n        'reducer - deal cards', newstate\n      )\n      return { ...newstate, received: false }\n    }\n    case START_GAME: {\n      const initialState = setUp(action.payload)\n      // console.log('it gets here - START GAME REDUCER')\n      const obj = { ...state, ...initialState, gameOn: true, received: false }\n      // console.log('obj - AFTER UPDATE', obj)\n      return obj\n\n    }\n    default: return state\n  }\n}\n","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx",["181","182","183","184","185","186","187","188","189","190","191"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\initialState.tsx",["192","193","194","195","196"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../../types/gameStateTypes'\n\nexport const initialState: Gamestate = {\n  sources: [\n  \n  ],\n  players: [\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n  gameOn:false\n}","D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\CureDeck\\CureDeck.tsx",[],["197","198"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx",["199","200"],"import React from 'react'\nimport PropTypes from 'prop-types'\n// import { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { SourceComponent  } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\nimport {useSelector} from 'react-redux'\nimport { RootState } from '../../redux/gameState/store'\nimport './SourceParent.scss'\n\nexport const SourceParent = () => {\n  // const sources = initDummyState.sources;\n  const sources = useSelector((state: RootState) => state.gameStateReducer.sources);\n\n\n  // use the\n\n  const renderSources = (srcArr: Source[]) => {\n    \n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n\n\n      return <SourceComponent source={source} key={source.name}/>\n    })\n  }\n\n  return (\n    <div id=\"source-parent-grid-container\">\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx",["201","202","203"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase, toPascalCase } from '../../helpers/utils'\nimport './SourceCard.scss'\nimport { shareCardEvent } from '../../logic/event.listeners';\nimport { ShareCardProps } from '../../redux/gameState/reduxTypes'\n\n//! issue with \"Card\" interface beings used for both Source/connection & \"Viral\" cards, which have name type \"null\" - possible change types/logic later\nexport interface SourceCardProps {\n  name: string,    //! NULL TO BE REMOVED\n  category: string, //! NULL TO BE REMOVED\n  canShare: any[]\n}\n// DON'T NEED ===> canlogon can go to the place if you have that card\n// canShare: a button that appears on each card when you are on the same location as another player\n// canchare: Player[]\n\n\nexport const SourceCard: React.FC<SourceCardProps> = ({ name, category, canShare }: SourceCardProps) => { // SVGIcon\n\n  const currentState = {}\n\n  const SVGIcon = getIcon(toCamelCase(name) + 'Icon');\n\n  const handleShareClick = (id: string) => {\n    //DISPATCH ACTION\n    console.log(`SHARING CARD ${name} WITH ${id}`);\n  }\n\n\n  const renderShareButtons = (shareWith: { name: string, id: string }[]) => {\n    return shareWith.map(player => <button onClick={() => handleShareClick(player.id)\n\n      // shareCardEvent({\n      //   oldState: currentState,\n      //   currentPlayerID: ,\n      //   recipient: player.id,\n      //   sharedCard: name\n      // })\n    }>{player.name}</button>)\n  }\n  return (\n    <div className={`source-card-container ${category}`} >\n      <SVGIcon name={name} className=\"card-icon\" />\n      <div className=\"name-container\" >\n        <p className=\"title\">{toPascalCase(name)}</p>\n        {renderShareButtons(canShare)}\n      </div>\n    </div>\n  )\n}","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx",["204","205","206","207"],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPawn\\PlayerPawn.tsx",["208","209","210","211"],"// import React from 'react';\nimport React from 'react';\n// also exported from '@storybook/react' if you can deal with breaking changes in 6.1\nimport { Story, Meta } from '@storybook/react/types-6-0';\nimport './PlayerPawn.css';\nimport { withDesign } from 'storybook-addon-designs';\nimport { useSelector } from 'react-redux';\n// import {RootState} from '../../redux/gameState/store'\nimport { getIcon } from '../../helpers/iconExporter'\n\n\nconst FirePawn = getIcon('firePawn');\nconst HexagonPawn = getIcon('hexagonPlayerPawn');\nconst FlowerPawn = getIcon('flowerPawn');\nconst RombPawn = getIcon('rombPawn')\nconst SunPawn = getIcon('sunPawn')\nconst SquarePawn = getIcon('squarePawn')\n\n\nconst getPawn = (color: string) => {\n\n  if (color === 'orange') return <FirePawn />;\n  if (color === 'red') return <SquarePawn />;\n  if (color === 'blue') return <RombPawn />;\n  if (color === 'yellow') return <SunPawn />;\n  if (color === 'pink') return <FlowerPawn />;\n  if (color === 'green') return <HexagonPawn />;\n\n}\n\nexport interface PlayerPawnProps {\n  color: string\n}\n\nexport const PlayerPawn: React.FC<PlayerPawnProps> = ({\n  color,\n}: PlayerPawnProps) => {\n  return (\n    <div className='container'>\n      {console.log(color, 'color')}\n      {getPawn(color)}\n    </div>\n  );\n};\n","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts",["212","213","214","215","216"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\n import { Gamestate, Card, Source, Player, Misinformation, Connection } from '../types/gameStateTypes'\n\nexport const initDummyState: Gamestate = {\n  sources: [\n    {\n      name: 'university',\n      misinfoType: 'community',\n      markers_community: 1,\n      markers_social: 1,\n      markers_relations: 1,\n      canMove: true,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: true,\n      canClearSocial: true,\n      canClearRelations: true,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'High School',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Taxi',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Local Cult',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Pub',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Hair Salon',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: true,\n      canClearSocial: true,\n      canClearRelations: true,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'University',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: true,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Gym',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 0,\n      markers_relations: 2,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: true,\n      canClearSocial: true,\n      canClearRelations: true,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Asda',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Instagram',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: true,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: true,\n      canClearSocial: true,\n      canClearRelations: true,\n      canShare: [ {\n        name: 'Player 1',\n        id: '1234',\n        cards: [],\n        cardHandOverflow: false,\n        isCurrent: true,\n        pawnColor: 'green',\n        currentSource: 'pub',\n        room:'1',\n      },{\n        name: 'Player 2',\n        id: '5678',\n        cards: [],\n        cardHandOverflow: false,\n        isCurrent: true,\n        pawnColor: 'purple',\n        currentSource: 'pub',\n        room:'1',\n\n      },],\n      canDebunk: [],\n    },\n    {\n      name: 'Facebook',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Youtube',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'twitter',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Illuminatify',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'reddit',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Whatsapp',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Tiktok',\n      misinfoType: 'yellow',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'uncle eugene',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'cousin',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'fran from hr',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'evil ex',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'opinionated grandpa',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'crazy dave',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'guy at the bus stop',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'mother in law',\n      misinfoType: 'red',\n      markers_community: 3,\n      markers_social: 3,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n  ],\n  players: [\n    {\n      name: 'Player 1',\n      id: '1234',\n      cards: [ \n      ],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'green',\n\n      currentSource: 'pub',\n      room:'1',\n     \n     \n\n    },\n    {\n      name: 'Player 2',\n      id: '5678',\n      cards: [{\n        cardType: 'connection',\n        sourceName: 'Instagram',\n        misinfoType: 'yellow',\n      },],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'purple',\n      currentSource: 'University',\n      room: '1',\n    \n\n    },\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n  gameOn:true\n}",["217","218"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\DebunkModal.tsx",["219","220","221","222","223","224"],"import React from 'react';\nimport Modal from 'react-modal';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/gameState/store';\nimport { SourceCard } from '../SourceCard/SourceCard';\nimport ReactDOM from 'react-dom';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n\ninterface ModalProps {\n  modalIsOpen: boolean,\n  setIsOpen: Function,\n  setselectedDebunkCards: Function\n}\n\nexport function ModalComponent({ modalIsOpen, setIsOpen, setselectedDebunkCards }: ModalProps) {\n  const currentPlayerCards = useSelector((state: RootState) => state.playerStateReducer.cards)\n\n  const gameState = useSelector((state: RootState) => state.gameStateReducer)\n\n\n\n\n  const fakeCards = ['Card 1', 'Card 2', 'Card 3']\n\n\n  var subtitle: any;\n\n\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        {fakeCards.map(card => <div>{card}</div>)}\n      </Modal>\n    </div>\n  );\n}","D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts",[],["225","226"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\OtherPlayer\\OtherPlayer.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\GameOn.tsx",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"\nimport React, { useEffect, useState } from 'react';\n// import { Box, Button, Grommet, Card, CardHeader, CardBody, CardFooter, Meter } from 'grommet';\n// import { Notification } from 'grommet-icons';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { RootState, store } from '../redux/gameState/store';\nimport { getGame, getGames, joinRoom } from '../socket-io-client/socket-io-client';\nimport { CureDeck } from '../components/CureDeck/CureDeck';\nimport { getIcon } from '../helpers/iconExporter'\nimport { SourceCard } from '../components/SourceCard/SourceCard';\nimport { CardHand } from '../components/CardHand/CardHand';\nimport { SourceDeck } from '../components/sourceDeck/sourceDeck'\nimport { MarkersStore } from '../components/MarkersStore/MarkersStore'\nimport { MisinformationDeck } from '../components/MisinformationDeck/misinformationDeck'\nimport { ChaosMeter } from '../components/ChaosMeter/ChaosMeter'\nimport { SpreadLevel } from '../components/SpreadLevel/SpreadLevel';\nimport { PlayerPrompt } from '../components/PlayerPrompt/PlayerPrompt';\nimport { SourceParent } from '../components/SourceParent/SourceParent';\nimport { NewGameMenu } from '../components/NewGameMenu/NewGameMenu'\nimport { addPlayerToGameState, DealCardsToNewPlayerAction, StartGameAction } from '../redux/gameState/gameStateActions';\nimport { Gamestate, Player } from '../types/gameStateTypes';\nimport { UpdateGameStateAction } from '../redux/gameState/reduxTypes';\nimport { OtherPlayer } from './OtherPlayer/OtherPlayer';\n\n\ninterface Props {\n  rendered: boolean\n}\n\nexport const GameOn: React.FC<Props> = ({ rendered }): JSX.Element => {\n\n  const dispatch = useDispatch();\n  // const [showSidebar, setShowSidebar] = useState(false);\n  const player = useSelector((state: RootState) => state.playerStateReducer)\n  const allRooms = useSelector((state: RootState) => state.allGamesStateReducer)\n\n  const getCards = () => {\n    state = store.getState().gameStateReducer\n    console.log(state, 'state from the gey cards button')\n    dispatch(DealCardsToNewPlayerAction({ player, state }))\n  }\n\n  const checkCards = (newstate: Gamestate) => {\n    for (let PLAYER of newstate.players) {\n      if (PLAYER.id === player.id) {\n        const p = PLAYER.cards;\n        const card = p[0];\n        if (!card) {\n\n          return true\n        }\n      }\n    }\n    return false;\n  };\n\n\n\n  let state = useSelector((state: RootState) => state.gameStateReducer)\n\n  return (\n    <div>\n      { (rendered && state.gameOn) &&\n        <div className=\"app-outer-wrapper\">\n          <div className=\"app-container\">\n            {/* <Map /> */}\n            {/* <GameBoard /> */}\n            <div className=\"sidebar left\">\n              {(checkCards(state) === true) ?\n                <button\n                  style={{\n                    background: 'royalblue', \n                    padding: ' 15px 35px', \n                    fontSize: '1em', \n                    borderRadius: '20px', \n                    border: 'none', \n                    fontWeight: 'bold', \n                    color: 'white', \n                    margin: '15px auto',\n                    width: '100%'\n                  }}\n                  onClick={getCards}> GET CARDS </button>\n                :\n                <CardHand />\n              }\n              <PlayerPrompt />\n            </div>\n            <div className=\"board-container\">\n              <div id=\"game-board\">\n                {/* <MapSVG className=\"map-svg\"/> */}\n                <SourceParent />\n              </div>\n              <SourceParent />\n              <SourceDeck />\n              <MisinformationDeck />\n              <MarkersStore />\n              {/* <ChaosMeterGrommet /> */}\n              <OtherPlayer />\n              {/* </Grommet> */}\n\n            </div>\n            <div className=\"sidebar right\">\n              <ChaosMeter />\n<<<<<<< HEAD\n              <SpreadLevel />\n=======\n>>>>>>> 583dd23cc123a2227fa9f7514208985bd40f9e1e\n            </div>\n          </div>\n        </div>\n      }\n    </div >\n  )\n}","D:\\thesis\\Viral\\Viral\\client\\src\\components\\GameOver\\gameOver.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\YouWon\\youWon.tsx",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":14},{"ruleId":"246","severity":1,"message":"250","line":2,"column":17,"nodeType":"248","messageId":"249","endLine":2,"endColumn":26},{"ruleId":"246","severity":1,"message":"251","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":18},{"ruleId":"246","severity":1,"message":"252","line":6,"column":21,"nodeType":"248","messageId":"249","endLine":6,"endColumn":26},{"ruleId":"246","severity":1,"message":"253","line":7,"column":19,"nodeType":"248","messageId":"249","endLine":7,"endColumn":27},{"ruleId":"246","severity":1,"message":"254","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":18},{"ruleId":"246","severity":1,"message":"255","line":13,"column":10,"nodeType":"248","messageId":"249","endLine":13,"endColumn":30},{"ruleId":"246","severity":1,"message":"256","line":13,"column":32,"nodeType":"248","messageId":"249","endLine":13,"endColumn":58},{"ruleId":"246","severity":1,"message":"257","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":19},{"ruleId":"246","severity":1,"message":"258","line":45,"column":9,"nodeType":"248","messageId":"249","endLine":45,"endColumn":15},{"ruleId":"246","severity":1,"message":"259","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":26},{"ruleId":"246","severity":1,"message":"260","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":28},{"ruleId":"246","severity":1,"message":"261","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":25},{"ruleId":"246","severity":1,"message":"262","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":17},{"ruleId":"246","severity":1,"message":"263","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":37},{"ruleId":"246","severity":1,"message":"264","line":1,"column":52,"nodeType":"248","messageId":"249","endLine":1,"endColumn":69},{"ruleId":"246","severity":1,"message":"255","line":4,"column":27,"nodeType":"248","messageId":"249","endLine":4,"endColumn":47},{"ruleId":"246","severity":1,"message":"256","line":4,"column":49,"nodeType":"248","messageId":"249","endLine":4,"endColumn":75},{"ruleId":"246","severity":1,"message":"265","line":4,"column":77,"nodeType":"248","messageId":"249","endLine":4,"endColumn":92},{"ruleId":"246","severity":1,"message":"266","line":4,"column":94,"nodeType":"248","messageId":"249","endLine":4,"endColumn":109},{"ruleId":"246","severity":1,"message":"252","line":6,"column":21,"nodeType":"248","messageId":"249","endLine":6,"endColumn":26},{"ruleId":"246","severity":1,"message":"267","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":16},{"ruleId":"246","severity":1,"message":"262","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":17},{"ruleId":"246","severity":1,"message":"268","line":46,"column":7,"nodeType":"248","messageId":"249","endLine":46,"endColumn":13},{"ruleId":"246","severity":1,"message":"269","line":47,"column":7,"nodeType":"248","messageId":"249","endLine":47,"endColumn":12},{"ruleId":"246","severity":1,"message":"270","line":3,"column":21,"nodeType":"248","messageId":"249","endLine":3,"endColumn":25},{"ruleId":"246","severity":1,"message":"271","line":3,"column":27,"nodeType":"248","messageId":"249","endLine":3,"endColumn":33},{"ruleId":"246","severity":1,"message":"267","line":3,"column":35,"nodeType":"248","messageId":"249","endLine":3,"endColumn":41},{"ruleId":"246","severity":1,"message":"272","line":3,"column":43,"nodeType":"248","messageId":"249","endLine":3,"endColumn":57},{"ruleId":"246","severity":1,"message":"273","line":3,"column":59,"nodeType":"248","messageId":"249","endLine":3,"endColumn":69},{"ruleId":"242","replacedBy":"274"},{"ruleId":"244","replacedBy":"275"},{"ruleId":"246","severity":1,"message":"276","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"277","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":16},{"ruleId":"246","severity":1,"message":"278","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":24},{"ruleId":"246","severity":1,"message":"279","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":24},{"ruleId":"246","severity":1,"message":"280","line":21,"column":9,"nodeType":"248","messageId":"249","endLine":21,"endColumn":21},{"ruleId":"246","severity":1,"message":"281","line":11,"column":10,"nodeType":"248","messageId":"249","endLine":11,"endColumn":18},{"ruleId":"246","severity":1,"message":"282","line":141,"column":9,"nodeType":"248","messageId":"249","endLine":141,"endColumn":19},{"ruleId":"246","severity":1,"message":"283","line":147,"column":9,"nodeType":"248","messageId":"249","endLine":147,"endColumn":22},{"ruleId":"246","severity":1,"message":"284","line":162,"column":7,"nodeType":"248","messageId":"249","endLine":162,"endColumn":25},{"ruleId":"246","severity":1,"message":"285","line":4,"column":10,"nodeType":"248","messageId":"249","endLine":4,"endColumn":15},{"ruleId":"246","severity":1,"message":"286","line":4,"column":17,"nodeType":"248","messageId":"249","endLine":4,"endColumn":21},{"ruleId":"246","severity":1,"message":"287","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":20},{"ruleId":"246","severity":1,"message":"288","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":21},{"ruleId":"246","severity":1,"message":"270","line":3,"column":22,"nodeType":"248","messageId":"249","endLine":3,"endColumn":26},{"ruleId":"246","severity":1,"message":"271","line":3,"column":28,"nodeType":"248","messageId":"249","endLine":3,"endColumn":34},{"ruleId":"246","severity":1,"message":"267","line":3,"column":36,"nodeType":"248","messageId":"249","endLine":3,"endColumn":42},{"ruleId":"246","severity":1,"message":"272","line":3,"column":44,"nodeType":"248","messageId":"249","endLine":3,"endColumn":58},{"ruleId":"246","severity":1,"message":"273","line":3,"column":60,"nodeType":"248","messageId":"249","endLine":3,"endColumn":70},{"ruleId":"242","replacedBy":"289"},{"ruleId":"244","replacedBy":"290"},{"ruleId":"246","severity":1,"message":"291","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":20},{"ruleId":"246","severity":1,"message":"292","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":16},{"ruleId":"246","severity":1,"message":"293","line":27,"column":9,"nodeType":"248","messageId":"249","endLine":27,"endColumn":27},{"ruleId":"246","severity":1,"message":"294","line":29,"column":9,"nodeType":"248","messageId":"249","endLine":29,"endColumn":18},{"ruleId":"246","severity":1,"message":"295","line":37,"column":7,"nodeType":"248","messageId":"249","endLine":37,"endColumn":20},{"ruleId":"246","severity":1,"message":"296","line":41,"column":12,"nodeType":"248","messageId":"249","endLine":41,"endColumn":21},{"ruleId":"242","replacedBy":"297"},{"ruleId":"244","replacedBy":"298"},{"ruleId":"246","severity":1,"message":"250","line":2,"column":17,"nodeType":"248","messageId":"249","endLine":2,"endColumn":26},{"ruleId":"246","severity":1,"message":"299","line":2,"column":28,"nodeType":"248","messageId":"249","endLine":2,"endColumn":36},{"ruleId":"246","severity":1,"message":"251","line":5,"column":10,"nodeType":"248","messageId":"249","endLine":5,"endColumn":18},{"ruleId":"246","severity":1,"message":"300","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":17},{"ruleId":"246","severity":1,"message":"253","line":7,"column":19,"nodeType":"248","messageId":"249","endLine":7,"endColumn":27},{"ruleId":"246","severity":1,"message":"301","line":7,"column":29,"nodeType":"248","messageId":"249","endLine":7,"endColumn":37},{"ruleId":"246","severity":1,"message":"254","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":18},{"ruleId":"246","severity":1,"message":"302","line":9,"column":10,"nodeType":"248","messageId":"249","endLine":9,"endColumn":17},{"ruleId":"246","severity":1,"message":"291","line":10,"column":10,"nodeType":"248","messageId":"249","endLine":10,"endColumn":20},{"ruleId":"246","severity":1,"message":"303","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":21},{"ruleId":"246","severity":1,"message":"255","line":20,"column":10,"nodeType":"248","messageId":"249","endLine":20,"endColumn":30},{"ruleId":"246","severity":1,"message":"265","line":20,"column":60,"nodeType":"248","messageId":"249","endLine":20,"endColumn":75},{"ruleId":"246","severity":1,"message":"267","line":21,"column":21,"nodeType":"248","messageId":"249","endLine":21,"endColumn":27},{"ruleId":"246","severity":1,"message":"304","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":31},{"ruleId":"246","severity":1,"message":"305","line":35,"column":9,"nodeType":"248","messageId":"249","endLine":35,"endColumn":17},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"@typescript-eslint/no-unused-vars","'Play' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Provider' is defined but never used.","'store' is defined but never used.","'getGames' is defined but never used.","'CureDeck' is defined but never used.","'addPlayerToGameState' is defined but never used.","'DealCardsToNewPlayerAction' is defined but never used.","'Gamestate' is defined but never used.","'MapSVG' is assigned a value but never used.","'gameStateReducer' is defined but never used.","'ADD_PLAYER_TO_GAME' is defined but never used.","'addPlayerToGame' is defined but never used.","'Console' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'StartGameAction' is defined but never used.","'updateGameState' is defined but never used.","'Player' is defined but never used.","'player' is assigned a value but never used.","'state' is assigned a value but never used.","'Card' is defined but never used.","'Source' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.",["306"],["307"],"'PropTypes' is defined but never used.","'render' is defined but never used.","'shareCardEvent' is defined but never used.","'ShareCardProps' is defined but never used.","'currentState' is assigned a value but never used.","'logOnOff' is defined but never used.","'renderIcon' is assigned a value but never used.","'renderAsLogOn' is assigned a value but never used.","'canDebunkClassName' is assigned a value but never used.","'Story' is defined but never used.","'Meta' is defined but never used.","'withDesign' is defined but never used.","'useSelector' is defined but never used.",["306"],["307"],"'SourceCard' is defined but never used.","'ReactDOM' is defined but never used.","'currentPlayerCards' is assigned a value but never used.","'gameState' is assigned a value but never used.","'subtitle' is defined but never used.","'openModal' is defined but never used.",["306"],["307"],"'useState' is defined but never used.","'getGame' is defined but never used.","'joinRoom' is defined but never used.","'getIcon' is defined but never used.","'NewGameMenu' is defined but never used.","'UpdateGameStateAction' is defined but never used.","'allRooms' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]