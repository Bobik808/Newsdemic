[{"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx":"1","D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts":"2","D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx":"3","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx":"4","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx":"5","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx":"6","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts":"7","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts":"8","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts":"9","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts":"10","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts":"11","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts":"12","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts":"13","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts":"14","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts":"15","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts":"16","D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts":"17","D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx":"18","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx":"19","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts":"20","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx":"21","D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx":"22","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx":"23","D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx":"24","D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx":"25","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx":"26","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx":"27","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\event.listeners.ts":"28"},{"size":478,"mtime":1612347362504,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1612199487710,"results":"31","hashOfConfig":"30"},{"size":2216,"mtime":1612704568302,"results":"32","hashOfConfig":"30"},{"size":760,"mtime":1612703962876,"results":"33","hashOfConfig":"30"},{"size":1961,"mtime":1612704318253,"results":"34","hashOfConfig":"30"},{"size":1471,"mtime":1612696926324,"results":"35","hashOfConfig":"30"},{"size":781,"mtime":1612702681242,"results":"36","hashOfConfig":"30"},{"size":1865,"mtime":1612704474817,"results":"37","hashOfConfig":"30"},{"size":2718,"mtime":1612700717728,"results":"38","hashOfConfig":"30"},{"size":310,"mtime":1612642213323,"results":"39","hashOfConfig":"30"},{"size":4397,"mtime":1612696888189,"results":"40","hashOfConfig":"30"},{"size":12724,"mtime":1612696926331,"results":"41","hashOfConfig":"30"},{"size":2746,"mtime":1612698260844,"results":"42","hashOfConfig":"30"},{"size":10171,"mtime":1612700540355,"results":"43","hashOfConfig":"30"},{"size":2955,"mtime":1612696926332,"results":"44","hashOfConfig":"30"},{"size":2972,"mtime":1612642213325,"results":"45","hashOfConfig":"30"},{"size":1745,"mtime":1612621578863,"results":"46","hashOfConfig":"30"},{"size":1669,"mtime":1612704623653,"results":"47","hashOfConfig":"30"},{"size":1467,"mtime":1612696926312,"results":"48","hashOfConfig":"30"},{"size":350,"mtime":1612696926334,"results":"49","hashOfConfig":"30"},{"size":656,"mtime":1612704056094,"results":"50","hashOfConfig":"30"},{"size":1003,"mtime":1612704056091,"results":"51","hashOfConfig":"30"},{"size":378,"mtime":1612704056088,"results":"52","hashOfConfig":"30"},{"size":352,"mtime":1612704056186,"results":"53","hashOfConfig":"30"},{"size":662,"mtime":1612696926319,"results":"54","hashOfConfig":"30"},{"size":727,"mtime":1612696926325,"results":"55","hashOfConfig":"30"},{"size":1978,"mtime":1612696926322,"results":"56","hashOfConfig":"30"},{"size":1390,"mtime":1612698585701,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1kpgg80",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx",[],["122","123"],"D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx",["124","125","126","127","128","129","130"],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx",["131","132"],"\nimport { createStore } from \"redux\";\nimport { combineReducers } from 'redux'\nimport { playerStateReducer } from './playerReducer'\n\n// import {Gamestate} from '../../types/gameStateTypes'\nimport { gameStateReducer } from './gameStateReducer';\nimport { Gamestate, Player } from \"../../types/gameStateTypes\";\nimport { allGamesStateReducer } from '../gameState/allGamesReducer'\n// export const reducer = combineReducers({\n//   playerStateReducer,\n//   gameStateReducer,\n//   allGamesStateReducer\n// })\n\nexport const store = createStore(gameStateReducer);\nexport const playerStore = createStore(playerStateReducer);\n\n\n// export type RootState = ReturnType<typeof reducer>\nexport interface RootState {\n  Player: Player\n  GameState: Gamestate,\n  AllGames: String[]\n}","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx",["133"],"//based on change of state \nimport io from \"socket.io-client\";\nimport * as dotenv from 'dotenv';\nimport { playerStore, store } from '../redux/gameState/store'\nimport { GetAllGamesAction, updateGameState } from \"../redux/gameState/gameStateActions\";\nimport { Gamestate } from \"../types/gameStateTypes\";\ndotenv.config({ path: __dirname + '/.env' });\n//connection to the server\ndotenv.config({ path: __dirname + '../.env' });\nconst socket = io(process.env.SERVER_URL || 'http://localhost:3002');\n\n\n\nstore.subscribe(() => {\n  const newState = store.getState()\n  socket.emit('onChangeState', { newState, Player })\n})\n\nconst Player = playerStore.getState()\n\n// on click - 'start game' \nexport const joinRoom = (name: string, room: string) => {\n  socket.emit('joinRoom', { name, room });\n  console.log(name, room)\n}\n\njoinRoom(Player.name, Player.room)\n// Message from server // welcome component \nsocket.on('joinConfirmation', (message: string) => {\n  console.log(message); // display message to the screen \n});\n\n//subscripion to any game state changes \n\nplayerStore.subscribe(()=> {\n  const newState = playerStore.getState()\n  socket.emit('onChangeState', { newState, Player })\n})\nstore.subscribe(() => {\n  const newState = store.getState()\n  socket.emit('onChangeState', { newState, Player })\n})\n\n//data coming from backend after game state changed\nsocket.on('updatedState', (newState: Gamestate) => {\n  newState.received = true;\n  store.dispatch(updateGameState(newState))\n})\n\n\n\n// on click when user wants to restart game \nexport const restartGame = (name: string, room: string) => {\n  joinRoom(name, room);\n  socket.emit('resumeGame', { Player })\n}\n\n// export const getGames = () => {\n//   socket.emit('getGames')\n//   socket.on('games', (\n//     (data: string[]) => {\n//       store.dispatch(GetAllGamesAction(data))\n//     }\n//   ))\n// }\n\n\n\n// how to we tell the users \nsocket.on('userLeft', (message: string) => console.log(message)) // need a end game button ","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts",["134","135","136","137","138"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../types/gameStateTypes'\n\nexport const initDummyState: Gamestate = {\n  sources: [\n    {\n      name: 'University',\n      misinfoType: 'blue',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Gym',\n      misinfoType: 'red',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Instagram',\n      misinfoType: 'yellow',\n      markers_community: 0,\n      markers_social: 0,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n  ],\n  players: [\n    {\n      name: 'Player 1',\n      id: '1234',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'green',\n      currentSource: 'University',\n      room:'1',\n    },\n    {\n      name: 'Player 2',\n      id: '5678',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'purple',\n      currentSource: 'University',\n      room:'1',\n\n    },\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n}","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts",[],["139","140"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx",["141","142","143"],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx",["144","145","146","147","148","149","150","151"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\nimport { SourceCard, SourceCardProps } from '../SourceCard/SourceCard';\nimport { RootState, store } from '../../redux/gameState/store'\nimport { DefaultRootState, useSelector } from 'react-redux';\nimport { Gamestate, Card as SourceCardType } from '../../types/gameStateTypes';\n// import { initDummyState } from '../../logic/dummyState.REDO_CO'\n\n\n\n// const gamestate = useSelector((state: RootState) => state.GameState.connectionDeck)\n// state.player[playerIndex].cards = []\n\n\nexport const CardHand: React.FC = () => { // SVGIcon\n  // const cards: Card[] = useSelector((state: RootState) => state.GameState.players[0].cards)\n  const cards: SourceCardType[] = [\n    {\n      cardType: 'connection',\n      sourceName: 'high school',\n      misinfoType: 'community',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'tiktok',\n      misinfoType: 'social',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'fran from hr',\n      misinfoType: 'relations',\n    },\n  ]\n\n  // push dummy card to hand //! UNDO\n\n\n\n\n  const renderCards = (cardArray: SourceCardType[]) => {\n    return cardArray.map(card => {\n      console.log(card)\n      return <SourceCard name={card.sourceName} category={card.misinfoType} />\n    })\n  }\n\n  return (\n    <div className=\"source-card-hand\">\n      {renderCards(cards)}\n    </div>\n  )\n}\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx",["152","153"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { Source as SourceComponent } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\n\nexport const SourceParent = () => {\n  const sources = initDummyState.sources;\n\n  const renderSources = (srcArr: Source[]) => {\n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n      return <SourceComponent name={source.name} markersCommunity={3} markersRelations={1}  markersSocial={2} />\n    })\n  }\n\n  return (\n    <div>\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx",["154"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\n\n\nexport interface SourceProps {\n  name: string,\n  markersCommunity: number,\n  markersSocial: number,\n  markersRelations: number,\n}\n\n\n\n// highlighted to show canMove, canLogon (single source which), canLogoff\n\n// 3 markers & can clear?\n\n// pawn <-- use otherPlayer, (canShare in otherPlayer)\n\n// canMove: white transparent overlay (AWAY LOCATION)\n// canLogon: blue border? (AWAY LOCATION)\n// canLogoff: green border? (AWAY LOCATION)\n// canLogon and Logoff: split blue/green border (AWAY LOCATION)\n\n// with social marker: red dot on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with community marker: yellow triangle on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with relations marker: blue square on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n\nexport const Source: React.FC<SourceProps> = ({ name, markersCommunity, markersSocial, markersRelations }: SourceProps) => { // SVGIcon\n  console.log('THIS IS THE NAME::::::: ', toCamelCase(name));\n  const SVGIconSource: React.FunctionComponent<React.SVGProps<SVGSVGElement>> = getIcon(toCamelCase(name) + 'Icon');\n\n\n  const getMarker = (category: string, num: number) => {\n    if (num > 0) {\n      console.log(toCamelCase(`marker ${category} ${num}`))\n      const Icon = getIcon(toCamelCase(`marker ${category} ${num}`));\n      return <Icon />;\n    }\n  }\n\n  const Iconnn = getIcon('markerRelations3');\n\n  return (\n    <div className={`source-container ${name}  `} >\n      <SVGIconSource />\n      <div className=\"markersContainer\">\n        {getMarker('community', markersCommunity)}\n        {getMarker('social', markersSocial)}\n        {getMarker('relations', markersRelations)}\n      </div>\n    </div>\n  )\n}\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\event.listeners.ts",["155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"160","severity":1,"message":"164","line":9,"column":10,"nodeType":"162","messageId":"163","endLine":9,"endColumn":18},{"ruleId":"160","severity":1,"message":"165","line":10,"column":10,"nodeType":"162","messageId":"163","endLine":10,"endColumn":17},{"ruleId":"160","severity":1,"message":"166","line":11,"column":10,"nodeType":"162","messageId":"163","endLine":11,"endColumn":20},{"ruleId":"160","severity":1,"message":"167","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":21},{"ruleId":"160","severity":1,"message":"168","line":26,"column":10,"nodeType":"162","messageId":"163","endLine":26,"endColumn":21},{"ruleId":"160","severity":1,"message":"169","line":26,"column":23,"nodeType":"162","messageId":"163","endLine":26,"endColumn":37},{"ruleId":"160","severity":1,"message":"170","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":25},{"ruleId":"160","severity":1,"message":"171","line":9,"column":10,"nodeType":"162","messageId":"163","endLine":9,"endColumn":30},{"ruleId":"160","severity":1,"message":"172","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":27},{"ruleId":"160","severity":1,"message":"173","line":3,"column":21,"nodeType":"162","messageId":"163","endLine":3,"endColumn":25},{"ruleId":"160","severity":1,"message":"174","line":3,"column":27,"nodeType":"162","messageId":"163","endLine":3,"endColumn":33},{"ruleId":"160","severity":1,"message":"175","line":3,"column":35,"nodeType":"162","messageId":"163","endLine":3,"endColumn":41},{"ruleId":"160","severity":1,"message":"176","line":3,"column":43,"nodeType":"162","messageId":"163","endLine":3,"endColumn":57},{"ruleId":"160","severity":1,"message":"177","line":3,"column":59,"nodeType":"162","messageId":"163","endLine":3,"endColumn":69},{"ruleId":"156","replacedBy":"178"},{"ruleId":"158","replacedBy":"179"},{"ruleId":"160","severity":1,"message":"180","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":37},{"ruleId":"160","severity":1,"message":"181","line":1,"column":52,"nodeType":"162","messageId":"163","endLine":1,"endColumn":69},{"ruleId":"160","severity":1,"message":"182","line":6,"column":23,"nodeType":"162","messageId":"163","endLine":6,"endColumn":28},{"ruleId":"160","severity":1,"message":"165","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":17},{"ruleId":"160","severity":1,"message":"183","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":21},{"ruleId":"160","severity":1,"message":"184","line":4,"column":22,"nodeType":"162","messageId":"163","endLine":4,"endColumn":37},{"ruleId":"160","severity":1,"message":"185","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":19},{"ruleId":"160","severity":1,"message":"182","line":5,"column":21,"nodeType":"162","messageId":"163","endLine":5,"endColumn":26},{"ruleId":"160","severity":1,"message":"186","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":26},{"ruleId":"160","severity":1,"message":"187","line":6,"column":28,"nodeType":"162","messageId":"163","endLine":6,"endColumn":39},{"ruleId":"160","severity":1,"message":"188","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":19},{"ruleId":"160","severity":1,"message":"189","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":17},{"ruleId":"160","severity":1,"message":"190","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":16},{"ruleId":"160","severity":1,"message":"191","line":46,"column":9,"nodeType":"162","messageId":"163","endLine":46,"endColumn":15},{"ruleId":"160","severity":1,"message":"192","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":13},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CureDeck' is defined but never used.","'getIcon' is defined but never used.","'SourceCard' is defined but never used.","'SpreadLevel' is defined but never used.","'showSidebar' is assigned a value but never used.","'setShowSidebar' is assigned a value but never used.","'combineReducers' is defined but never used.","'allGamesStateReducer' is defined but never used.","'GetAllGamesAction' is defined but never used.","'Card' is defined but never used.","'Source' is defined but never used.","'Player' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.",["193"],["194"],"'ButtonHTMLAttributes' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'store' is defined but never used.","'toCamelCase' is defined but never used.","'SourceCardProps' is defined but never used.","'RootState' is defined but never used.","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","'Gamestate' is defined but never used.","'PropTypes' is defined but never used.","'render' is defined but never used.","'Iconnn' is assigned a value but never used.","'Add' is defined but never used.","no-global-assign","no-unsafe-negation"]