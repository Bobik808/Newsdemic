[{"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/index.tsx":"1","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/reportWebVitals.ts":"2","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/App.tsx":"3","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/socket-io-client/socket-io-client.tsx":"4","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/store.tsx":"5","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/CardHand/CardHand.tsx":"6","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/MarkersStore/MarkersStore.tsx":"7","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/MisinformationDeck/misinformationDeck.tsx":"8","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SourceParent/SourceParent.tsx":"9","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/sourceDeck/sourceDeck.tsx":"10","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/PlayerPrompt/PlayerPrompt.tsx":"11","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/ChaosMeter/ChaosMeter.tsx":"12","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/gameStateActions.ts":"13","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/playerReducer.ts":"14","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/allGamesReducer.ts":"15","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/gameStateReducer.ts":"16","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/dummyState.REDO_CO.ts":"17","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SourceCard/SourceCard.tsx":"18","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/Source/Source.tsx":"19","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/reduxTypes.ts":"20","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/actions.MW.ts":"21","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/actions.newState_CO.ts":"22","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/helpers/utils.ts":"23","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/helpers/iconExporter.ts":"24","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/connections.ts":"25","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SpreadLevel/SpreadLevel.tsx":"26","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/CureDeck/CureDeck.tsx":"27"},{"size":478,"mtime":1612347311301,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1612169849939,"results":"30","hashOfConfig":"29"},{"size":1975,"mtime":1612706555244,"results":"31","hashOfConfig":"29"},{"size":1710,"mtime":1612637565108,"results":"32","hashOfConfig":"29"},{"size":706,"mtime":1612706478492,"results":"33","hashOfConfig":"29"},{"size":1467,"mtime":1612637565086,"results":"34","hashOfConfig":"29"},{"size":709,"mtime":1612637565092,"results":"35","hashOfConfig":"29"},{"size":397,"mtime":1612637565092,"results":"36","hashOfConfig":"29"},{"size":727,"mtime":1612639821601,"results":"37","hashOfConfig":"29"},{"size":371,"mtime":1612637565100,"results":"38","hashOfConfig":"29"},{"size":662,"mtime":1612639821600,"results":"39","hashOfConfig":"29"},{"size":1016,"mtime":1612637565087,"results":"40","hashOfConfig":"29"},{"size":2511,"mtime":1612637565104,"results":"41","hashOfConfig":"29"},{"size":700,"mtime":1612637565104,"results":"42","hashOfConfig":"29"},{"size":350,"mtime":1612637565103,"results":"43","hashOfConfig":"29"},{"size":1821,"mtime":1612637565104,"results":"44","hashOfConfig":"29"},{"size":2955,"mtime":1612639999043,"results":"45","hashOfConfig":"29"},{"size":1471,"mtime":1612637565096,"results":"46","hashOfConfig":"29"},{"size":1978,"mtime":1612639821601,"results":"47","hashOfConfig":"29"},{"size":2608,"mtime":1612637565105,"results":"48","hashOfConfig":"29"},{"size":10172,"mtime":1612637565101,"results":"49","hashOfConfig":"29"},{"size":12724,"mtime":1612637565102,"results":"50","hashOfConfig":"29"},{"size":310,"mtime":1612549028550,"results":"51","hashOfConfig":"29"},{"size":4397,"mtime":1612637565100,"results":"52","hashOfConfig":"29"},{"size":2972,"mtime":1612637565126,"results":"53","hashOfConfig":"29"},{"size":833,"mtime":1612706493919,"results":"54","hashOfConfig":"29"},{"size":1288,"mtime":1612706436014,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1dks9gm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/index.tsx",[],["116","117"],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/reportWebVitals.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/App.tsx",["118","119","120","121"],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/socket-io-client/socket-io-client.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/store.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/CardHand/CardHand.tsx",["122","123","124","125","126","127","128","129"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\nimport { SourceCard, SourceCardProps } from '../SourceCard/SourceCard';\nimport { RootState, store } from '../../redux/gameState/store'\nimport { DefaultRootState, useSelector } from 'react-redux';\nimport { Gamestate, Card as SourceCardType } from '../../types/gameStateTypes';\n// import { initDummyState } from '../../logic/dummyState.REDO_CO'\n\n// const gamestate = useSelector((state: RootState) => state.GameState.connectionDeck)\n// state.player[playerIndex].cards = []\n\nexport const CardHand: React.FC = () => { // SVGIcon\n  // const cards: Card[] = useSelector((state: RootState) => state.GameState.players[0].cards)\n  const cards: SourceCardType[] = [\n    {\n      cardType: 'connection',\n      sourceName: 'high school',\n      misinfoType: 'community',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'tiktok',\n      misinfoType: 'social',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'fran from hr',\n      misinfoType: 'relations',\n    },\n  ]\n\n  // push dummy card to hand //! UNDO\n\n\n\n\n  const renderCards = (cardArray: SourceCardType[]) => {\n    return cardArray.map(card => {\n      console.log(card)\n      return <SourceCard name={card.sourceName} category={card.misinfoType} canShare={[]} />\n    })\n  }\n\n  return (\n    <div className=\"source-card-hand\">\n      {renderCards(cards)}\n    </div>\n  )\n}\n\n","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/MarkersStore/MarkersStore.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/MisinformationDeck/misinformationDeck.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SourceParent/SourceParent.tsx",["130","131"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { Source as SourceComponent } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\n\nexport const SourceParent = () => {\n  const sources = initDummyState.sources;\n\n  const renderSources = (srcArr: Source[]) => {\n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n      return <SourceComponent name={source.name} markersCommunity={3} markersRelations={1}  markersSocial={2} />\n    })\n  }\n\n  return (\n    <div>\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/sourceDeck/sourceDeck.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/PlayerPrompt/PlayerPrompt.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/ChaosMeter/ChaosMeter.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/gameStateActions.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/playerReducer.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/allGamesReducer.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/gameStateReducer.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/dummyState.REDO_CO.ts",["132","133","134","135","136"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../types/gameStateTypes'\n\nexport const initDummyState: Gamestate = {\n  sources: [\n    {\n      name: 'University',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Gym',\n      misinfoType: 'red',\n      markers_community: 1,\n      markers_social: 0,\n      markers_relations: 2,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Instagram',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n  ],\n  players: [\n    {\n      name: 'Player 1',\n      id: '1234',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'green',\n      currentSource: 'University',\n      room:'1',\n    },\n    {\n      name: 'Player 2',\n      id: '5678',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'purple',\n      currentSource: 'University',\n      room:'1',\n\n    },\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n}","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SourceCard/SourceCard.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/Source/Source.tsx",["137"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\n\n\nexport interface SourceProps {\n  name: string,\n  markersCommunity: number,\n  markersSocial: number,\n  markersRelations: number,\n}\n\n\n\n// highlighted to show canMove, canLogon (single source which), canLogoff\n\n// 3 markers & can clear?\n\n// pawn <-- use otherPlayer, (canShare in otherPlayer)\n\n// canMove: white transparent overlay (AWAY LOCATION)\n// canLogon: blue border? (AWAY LOCATION)\n// canLogoff: green border? (AWAY LOCATION)\n// canLogon and Logoff: split blue/green border (AWAY LOCATION)\n\n// with social marker: red dot on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with community marker: yellow triangle on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with relations marker: blue square on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n\nexport const Source: React.FC<SourceProps> = ({ name, markersCommunity, markersSocial, markersRelations }: SourceProps) => { // SVGIcon\n  console.log('THIS IS THE NAME::::::: ', toCamelCase(name));\n  const SVGIconSource: React.FunctionComponent<React.SVGProps<SVGSVGElement>> = getIcon(toCamelCase(name) + 'Icon');\n\n\n  const getMarker = (category: string, num: number) => {\n    if (num > 0) {\n      console.log(toCamelCase(`marker ${category} ${num}`))\n      const Icon = getIcon(toCamelCase(`marker ${category} ${num}`));\n      return <Icon />;\n    }\n  }\n\n  const Iconnn = getIcon('markerRelations3');\n\n  return (\n    <div className={`source-container ${name}  `} >\n      <SVGIconSource />\n      <div className=\"markersContainer\">\n        {getMarker('community', markersCommunity)}\n        {getMarker('social', markersSocial)}\n        {getMarker('relations', markersRelations)}\n      </div>\n    </div>\n  )\n}\n\n","/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/redux/gameState/reduxTypes.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/actions.MW.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/actions.newState_CO.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/helpers/utils.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/helpers/iconExporter.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/logic/connections.ts",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/SpreadLevel/SpreadLevel.tsx",[],"/Users/tillschmidt/Documents/Dev/Codeworks_Bootcamp/viral/Viral/client/src/components/CureDeck/CureDeck.tsx",["138"],"import React from 'react';\nimport \"./CureDeck.css\"\nimport { DefaultRootState, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/gameState/store';\n\n\n\n\n\n\nexport const CureDeck: React.FC = ():JSX.Element => { // SVGIcon\n  // using redux instead of props for real implementation\n  const gamestate = useSelector((state: RootState) => state.gameStateReducer)\n  console.log('gamestate from curedeck' , gamestate)\n  let misinformationCommunityHasDebunked = gamestate.misinformation.community.debunked\n  let misinformationRelationsHasDebunked = gamestate.misinformation.relations.debunked\n  let misinformationSocialHasDebunked = gamestate.misinformation.social.debunked\n\n\n\n\n  let noCureString = \"Not debunked yet - we're screwed\"\n  let cureString = \"Debunked!! bitches!\"\n  const CureDeck = (<>\n    <div className=\"misinformation-cure-deck-container A\">{misinformationCommunityHasDebunked ? cureString : noCureString}</div>\n    <div className=\"misinformation-cure-deck-container B\">{misinformationRelationsHasDebunked ? cureString : noCureString}</div>\n    <div className=\"misinformation-cure-deck-container C\">{misinformationSocialHasDebunked ? cureString : noCureString}</div>\n\n\n  </>)\n\n  return (\n    <div className=\"cure-deck-container\" >\n      {CureDeck}\n    </div>\n  )\n}",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":17},{"ruleId":"143","severity":1,"message":"147","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":20},{"ruleId":"143","severity":1,"message":"148","line":25,"column":10,"nodeType":"145","messageId":"146","endLine":25,"endColumn":21},{"ruleId":"143","severity":1,"message":"149","line":25,"column":23,"nodeType":"145","messageId":"146","endLine":25,"endColumn":37},{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"150","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":21},{"ruleId":"143","severity":1,"message":"151","line":4,"column":22,"nodeType":"145","messageId":"146","endLine":4,"endColumn":37},{"ruleId":"143","severity":1,"message":"152","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":19},{"ruleId":"143","severity":1,"message":"153","line":5,"column":21,"nodeType":"145","messageId":"146","endLine":5,"endColumn":26},{"ruleId":"143","severity":1,"message":"154","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":26},{"ruleId":"143","severity":1,"message":"155","line":6,"column":28,"nodeType":"145","messageId":"146","endLine":6,"endColumn":39},{"ruleId":"143","severity":1,"message":"156","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":19},{"ruleId":"143","severity":1,"message":"157","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":17},{"ruleId":"143","severity":1,"message":"158","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":16},{"ruleId":"143","severity":1,"message":"159","line":3,"column":21,"nodeType":"145","messageId":"146","endLine":3,"endColumn":25},{"ruleId":"143","severity":1,"message":"160","line":3,"column":27,"nodeType":"145","messageId":"146","endLine":3,"endColumn":33},{"ruleId":"143","severity":1,"message":"161","line":3,"column":35,"nodeType":"145","messageId":"146","endLine":3,"endColumn":41},{"ruleId":"143","severity":1,"message":"162","line":3,"column":43,"nodeType":"145","messageId":"146","endLine":3,"endColumn":57},{"ruleId":"143","severity":1,"message":"163","line":3,"column":59,"nodeType":"145","messageId":"146","endLine":3,"endColumn":69},{"ruleId":"143","severity":1,"message":"164","line":46,"column":9,"nodeType":"145","messageId":"146","endLine":46,"endColumn":15},{"ruleId":"143","severity":1,"message":"154","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":26},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'getIcon' is defined but never used.","Identifier","unusedVar","'SourceCard' is defined but never used.","'showSidebar' is assigned a value but never used.","'setShowSidebar' is assigned a value but never used.","'toCamelCase' is defined but never used.","'SourceCardProps' is defined but never used.","'RootState' is defined but never used.","'store' is defined but never used.","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","'Gamestate' is defined but never used.","'PropTypes' is defined but never used.","'render' is defined but never used.","'Card' is defined but never used.","'Source' is defined but never used.","'Player' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.","'Iconnn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]