[{"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx":"1","D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts":"2","D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx":"3","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx":"4","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts":"5","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts":"6","D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts":"7","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\dummy-redux-component.tsx":"8","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\dummy-state.tsx":"9","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx":"10","D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx":"11","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx":"12","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx":"13","D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx":"14","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx":"15","D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx":"16","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx":"17","D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx":"18","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts":"19","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CureDeck\\CureDeck.tsx":"20","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx":"21","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts":"22","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts":"23","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts":"24","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts":"25","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts":"26","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx":"27","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts":"28","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts":"29","D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts":"30","D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx":"31","D:\\thesis\\Viral\\Viral\\client\\src\\components\\StartGame.tsx":"32","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\initialState.tsx":"33"},{"size":478,"mtime":1612347362504,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1612199487710,"results":"36","hashOfConfig":"35"},{"size":1319,"mtime":1612778247239,"results":"37","hashOfConfig":"35"},{"size":706,"mtime":1612720420539,"results":"38","hashOfConfig":"35"},{"size":2865,"mtime":1612724436140,"results":"39","hashOfConfig":"35"},{"size":2461,"mtime":1612778852807,"results":"40","hashOfConfig":"35"},{"size":1745,"mtime":1612730670706,"results":"41","hashOfConfig":"35"},{"size":968,"mtime":1612720420541,"results":"42","hashOfConfig":"35"},{"size":3174,"mtime":1612720420542,"results":"43","hashOfConfig":"35"},{"size":1850,"mtime":1612779008204,"results":"44","hashOfConfig":"35"},{"size":1978,"mtime":1612720420484,"results":"45","hashOfConfig":"35"},{"size":1467,"mtime":1612720420452,"results":"46","hashOfConfig":"35"},{"size":709,"mtime":1612720420457,"results":"47","hashOfConfig":"35"},{"size":371,"mtime":1612720420491,"results":"48","hashOfConfig":"35"},{"size":727,"mtime":1612720420487,"results":"49","hashOfConfig":"35"},{"size":1016,"mtime":1612720420453,"results":"50","hashOfConfig":"35"},{"size":397,"mtime":1612720420464,"results":"51","hashOfConfig":"35"},{"size":662,"mtime":1612720420481,"results":"52","hashOfConfig":"35"},{"size":668,"mtime":1612724702320,"results":"53","hashOfConfig":"35"},{"size":1288,"mtime":1612720420455,"results":"54","hashOfConfig":"35"},{"size":833,"mtime":1612720420489,"results":"55","hashOfConfig":"35"},{"size":350,"mtime":1612720420520,"results":"56","hashOfConfig":"35"},{"size":3025,"mtime":1612724366657,"results":"57","hashOfConfig":"35"},{"size":12724,"mtime":1612720420499,"results":"58","hashOfConfig":"35"},{"size":2972,"mtime":1612776215560,"results":"59","hashOfConfig":"35"},{"size":10208,"mtime":1612776182108,"results":"60","hashOfConfig":"35"},{"size":1471,"mtime":1612720420486,"results":"61","hashOfConfig":"35"},{"size":2972,"mtime":1612720420505,"results":"62","hashOfConfig":"35"},{"size":4397,"mtime":1612720420492,"results":"63","hashOfConfig":"35"},{"size":310,"mtime":1612720420493,"results":"64","hashOfConfig":"35"},{"size":2702,"mtime":1612776475872,"results":"65","hashOfConfig":"35"},{"size":3284,"mtime":1612778657155,"results":"66","hashOfConfig":"35"},{"size":1523,"mtime":1612776358781,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1kpgg80",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},"D:\\thesis\\Viral\\Viral\\client\\src\\index.tsx",[],["145","146"],"D:\\thesis\\Viral\\Viral\\client\\src\\reportWebVitals.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\App.tsx",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\store.tsx",["168","169"],"\nimport { createStore } from \"redux\";\nimport { combineReducers } from 'redux'\n// import { playerStateReducer } from './playerReducer'\n\n// import {Gamestate} from '../../types/gameStateTypes'\nimport { gameStateReducer } from './gameStateReducer';\nimport { Gamestate, Player } from \"../../types/gameStateTypes\";\n// export const reducer = combineReducers({\n//   playerStateReducer,\n//   gameStateReducer,\n//   allGamesStateReducer\n// })\n\nexport const store = createStore(gameStateReducer);\nexport let playerStore:string; \n\n\n\nexport interface RootState {\n  Player: Player\n  GameState: Gamestate,\n  AllGames: String[]\n}","D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateActions.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\gameStateReducer.ts",["170"],"D:\\thesis\\Viral\\Viral\\client\\src\\types\\gameStateTypes.ts",[],["171","172"],"D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\dummy-redux-component.tsx",["173"],"\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GameState } from '../types/gameStateTypes';\nimport { decrementMoves } from '../redux/gameState/gameStateActions'\nimport { joinRoom } from './socket-io-client';\nimport { join } from 'path';\nexport const ReduxDummy: React.FC = (): JSX.Element => {\n\n  const gameState = useSelector((state: GameState) => state)\n  const movesLeft = Number(gameState.currentTurn.movesLeft) - 1\n  const dispatch = useDispatch();\n  const click = () => {\n    dispatch(decrementMoves(movesLeft))\n  }\n  const fakeUser = { username: 'Maria', room: '2' }\n\n  const startGame = () => {\n    joinRoom(fakeUser.username, fakeUser.room);\n  }\n\n\n  return (\n    <div>\n      <h1>\n        {movesLeft}\n      </h1>\n      <button onClick={startGame}>Start Game</button>\n      <br />\n      <button onClick={click}>Hello, Click me</button>\n    </div>\n  )\n}","D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\dummy-state.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\socket-io-client\\socket-io-client.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\Source\\Source.tsx",["174"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\n\n\nexport interface SourceProps {\n  name: string,\n  markersCommunity: number,\n  markersSocial: number,\n  markersRelations: number,\n}\n\n\n\n// highlighted to show canMove, canLogon (single source which), canLogoff\n\n// 3 markers & can clear?\n\n// pawn <-- use otherPlayer, (canShare in otherPlayer)\n\n// canMove: white transparent overlay (AWAY LOCATION)\n// canLogon: blue border? (AWAY LOCATION)\n// canLogoff: green border? (AWAY LOCATION)\n// canLogon and Logoff: split blue/green border (AWAY LOCATION)\n\n// with social marker: red dot on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with community marker: yellow triangle on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with relations marker: blue square on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n\nexport const Source: React.FC<SourceProps> = ({ name, markersCommunity, markersSocial, markersRelations }: SourceProps) => { // SVGIcon\n  console.log('THIS IS THE NAME::::::: ', toCamelCase(name));\n  const SVGIconSource: React.FunctionComponent<React.SVGProps<SVGSVGElement>> = getIcon(toCamelCase(name) + 'Icon');\n\n\n  const getMarker = (category: string, num: number) => {\n    if (num > 0) {\n      console.log(toCamelCase(`marker ${category} ${num}`))\n      const Icon = getIcon(toCamelCase(`marker ${category} ${num}`));\n      return <Icon />;\n    }\n  }\n\n  const Iconnn = getIcon('markerRelations3');\n\n  return (\n    <div className={`source-container ${name}  `} >\n      <SVGIconSource />\n      <div className=\"markersContainer\">\n        {getMarker('community', markersCommunity)}\n        {getMarker('social', markersSocial)}\n        {getMarker('relations', markersRelations)}\n      </div>\n    </div>\n  )\n}\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\components\\CardHand\\CardHand.tsx",["175","176","177","178","179","180","181","182"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase } from '../../helpers/utils';\nimport { SourceCard, SourceCardProps } from '../SourceCard/SourceCard';\nimport { RootState, store } from '../../redux/gameState/store'\nimport { DefaultRootState, useSelector } from 'react-redux';\nimport { Gamestate, Card as SourceCardType } from '../../types/gameStateTypes';\n// import { initDummyState } from '../../logic/dummyState.REDO_CO'\n\n// const gamestate = useSelector((state: RootState) => state.GameState.connectionDeck)\n// state.player[playerIndex].cards = []\n\nexport const CardHand: React.FC = () => { // SVGIcon\n  // const cards: Card[] = useSelector((state: RootState) => state.GameState.players[0].cards)\n  const cards: SourceCardType[] = [\n    {\n      cardType: 'connection',\n      sourceName: 'high school',\n      misinfoType: 'community',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'tiktok',\n      misinfoType: 'social',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'fran from hr',\n      misinfoType: 'relations',\n    },\n  ]\n\n  // push dummy card to hand //! UNDO\n\n\n\n\n  const renderCards = (cardArray: SourceCardType[]) => {\n    return cardArray.map(card => {\n      console.log(card)\n      return <SourceCard name={card.sourceName} category={card.misinfoType} canShare={[]} />\n    })\n  }\n\n  return (\n    <div className=\"source-card-hand\">\n      {renderCards(cards)}\n    </div>\n  )\n}\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\components\\MarkersStore\\MarkersStore.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\sourceDeck\\sourceDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceParent\\SourceParent.tsx",["183","184"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { Source as SourceComponent } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\n\nexport const SourceParent = () => {\n  const sources = initDummyState.sources;\n\n  const renderSources = (srcArr: Source[]) => {\n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n      return <SourceComponent name={source.name} markersCommunity={3} markersRelations={1}  markersSocial={2} />\n    })\n  }\n\n  return (\n    <div>\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","D:\\thesis\\Viral\\Viral\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\playerReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\CureDeck\\CureDeck.tsx",["185"],"import React from 'react';\nimport \"./CureDeck.css\"\nimport { DefaultRootState, useSelector } from 'react-redux'\nimport { RootState } from '../../redux/gameState/store';\n\n\n\n\n\n\nexport const CureDeck: React.FC = ():JSX.Element => { // SVGIcon\n  // using redux instead of props for real implementation\n  const gamestate = useSelector((state: RootState) => state.gameStateReducer)\n  console.log('gamestate from curedeck' , gamestate)\n  let misinformationCommunityHasDebunked = gamestate.misinformation.community.debunked\n  let misinformationRelationsHasDebunked = gamestate.misinformation.relations.debunked\n  let misinformationSocialHasDebunked = gamestate.misinformation.social.debunked\n\n\n\n\n  let noCureString = \"Not debunked yet - we're screwed\"\n  let cureString = \"Debunked!! bitches!\"\n  const CureDeck = (<>\n    <div className=\"misinformation-cure-deck-container A\">{misinformationCommunityHasDebunked ? cureString : noCureString}</div>\n    <div className=\"misinformation-cure-deck-container B\">{misinformationRelationsHasDebunked ? cureString : noCureString}</div>\n    <div className=\"misinformation-cure-deck-container C\">{misinformationSocialHasDebunked ? cureString : noCureString}</div>\n\n\n  </>)\n\n  return (\n    <div className=\"cure-deck-container\" >\n      {CureDeck}\n    </div>\n  )\n}","D:\\thesis\\Viral\\Viral\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.newState_CO.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\dummyState.REDO_CO.ts",["186","187","188","189","190"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../types/gameStateTypes'\n\nexport const initDummyState: Gamestate = {\n  sources: [\n    {\n      name: 'University',\n      misinfoType: 'blue',\n      markers_community: 1,\n      markers_social: 3,\n      markers_relations: 0,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Gym',\n      misinfoType: 'red',\n      markers_community: 1,\n      markers_social: 0,\n      markers_relations: 2,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n    {\n      name: 'Instagram',\n      misinfoType: 'yellow',\n      markers_community: 1,\n      markers_social: 2,\n      markers_relations: 3,\n      canMove: false,\n      canLogOn: false,\n      canLogOff: false,\n      canClearCommunity: false,\n      canClearSocial: false,\n      canClearRelations: false,\n      canShare: [],\n      canDebunk: [],\n    },\n  ],\n  players: [\n    {\n      name: 'Player 1',\n      id: '1234',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'green',\n      currentSource: 'University',\n      room: '1',\n    },\n    {\n      name: 'Player 2',\n      id: '5678',\n      cards: [],\n      cardHandOverflow: false,\n      isCurrent: true,\n      pawnColor: 'purple',\n      currentSource: 'University',\n      room: '1',\n\n    },\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n  gameOn: true\n}","D:\\thesis\\Viral\\Viral\\client\\src\\logic\\actions.MW.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\SourceCard\\SourceCard.tsx",[],"D:\\thesis\\Viral\\Viral\\client\\src\\logic\\connections.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\iconExporter.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\helpers\\utils.ts",[],"D:\\thesis\\Viral\\Viral\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx",["191","192","193","194","195","196","197","198","199","200","201","202"],"import React, { ButtonHTMLAttributes, ChangeEvent, DetailedHTMLProps, useState } from 'react';\nimport './NewGameMenu.css';\n// import { startGameEvent, addPlayerEvent } from '../../logic/event.listeners'\nimport { AddPlayerAction, addPlayerToGameState, StartGameAction, updateGameState } from '../../redux/gameState/gameStateActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, store } from '../../redux/gameState/store';\nimport { Player } from '../../types/gameStateTypes';\nimport { Console } from 'console';\n\n\nexport const NewGameMenu: React.FC = () => {\n  const [input, updateName] = useState({ name: '', color: '', room: '' })\n  // const [Room, updateRoom] = useState('')\n  const dispatch = useDispatch();\n  const [option, updateOption] = useState(true)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.preventDefault()\n    if (event.target) {\n      updateName(state => ({\n        ...state,\n        [event.target.name]: event.target.value\n      }))\n    }\n\n  }\n\n\n\n  const addPlayer = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    dispatch(AddPlayerAction(input.name, input.color, input.room))\n    \n  }\n\n\n  // const selectRoom = (e: React.ChangeEvent<HTMLSelectElement>) => {\n  //   console.log(e.target.value);\n  //   updateRoom(e.target.value);\n  // }\n\n  return (\n    <form className='form' >\n      <div className='menu-container'>\n        <div className='title-container'>\n          <h3>Welcome</h3>\n        </div>\n        <input\n          type='text'\n          name='name'\n          value={input.name}\n          placeholder='player name...'\n          onChange={handleChange}\n        ></input>\n\n        <input\n          type='text'\n          name='color'\n          value={input.color}\n          placeholder='color'\n          onChange={handleChange}\n        >\n        </input>\n\n        <input\n          type='text'\n          name='room'\n          value={input.room}\n          placeholder='room name'\n          onChange={handleChange}\n\n        ></input>\n        <input\n          type='text'\n          name='number of players'\n          placeholder='1 - 4 players...'\n        ></input>\n        {/* \n        <select\n          placeholder='select room'\n          value={Room}\n          onChange={selectRoom}>\n          {(rooms.length > 0) ?\n            rooms.map(room =>\n              <option value={`${room}`} id='room-options'>\n                {room}\n              </option>) :\n            <option> Start new game</option>\n          }\n        </select> */}\n\n        <button className='start_game_button' type='submit' onClick={addPlayer} >\n          Play\n        </button>\n      </div>\n    </form>\n  );\n};","D:\\thesis\\Viral\\Viral\\client\\src\\components\\StartGame.tsx",["203","204","205","206","207","208","209","210"],"D:\\thesis\\Viral\\Viral\\client\\src\\redux\\gameState\\initialState.tsx",["211","212","213","214","215"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../../types/gameStateTypes'\n\nexport const initialState: Gamestate = {\n  sources: [\n  \n  ],\n  players: [\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n  gameOn:false\n}",{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":17,"nodeType":"222","messageId":"223","endLine":2,"endColumn":26},{"ruleId":"220","severity":1,"message":"224","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":13},{"ruleId":"220","severity":1,"message":"225","line":3,"column":15,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"226","line":3,"column":23,"nodeType":"222","messageId":"223","endLine":3,"endColumn":30},{"ruleId":"220","severity":1,"message":"227","line":3,"column":32,"nodeType":"222","messageId":"223","endLine":3,"endColumn":36},{"ruleId":"220","severity":1,"message":"228","line":3,"column":38,"nodeType":"222","messageId":"223","endLine":3,"endColumn":48},{"ruleId":"220","severity":1,"message":"229","line":3,"column":50,"nodeType":"222","messageId":"223","endLine":3,"endColumn":58},{"ruleId":"220","severity":1,"message":"230","line":3,"column":60,"nodeType":"222","messageId":"223","endLine":3,"endColumn":70},{"ruleId":"220","severity":1,"message":"231","line":3,"column":72,"nodeType":"222","messageId":"223","endLine":3,"endColumn":77},{"ruleId":"220","severity":1,"message":"232","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":18},{"ruleId":"220","severity":1,"message":"233","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":18},{"ruleId":"220","severity":1,"message":"234","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":20},{"ruleId":"220","severity":1,"message":"235","line":13,"column":10,"nodeType":"222","messageId":"223","endLine":13,"endColumn":22},{"ruleId":"220","severity":1,"message":"236","line":14,"column":10,"nodeType":"222","messageId":"223","endLine":14,"endColumn":28},{"ruleId":"220","severity":1,"message":"237","line":15,"column":10,"nodeType":"222","messageId":"223","endLine":15,"endColumn":20},{"ruleId":"220","severity":1,"message":"238","line":16,"column":10,"nodeType":"222","messageId":"223","endLine":16,"endColumn":21},{"ruleId":"220","severity":1,"message":"239","line":17,"column":10,"nodeType":"222","messageId":"223","endLine":17,"endColumn":22},{"ruleId":"220","severity":1,"message":"240","line":18,"column":10,"nodeType":"222","messageId":"223","endLine":18,"endColumn":22},{"ruleId":"220","severity":1,"message":"241","line":20,"column":10,"nodeType":"222","messageId":"223","endLine":20,"endColumn":19},{"ruleId":"220","severity":1,"message":"242","line":24,"column":10,"nodeType":"222","messageId":"223","endLine":24,"endColumn":23},{"ruleId":"220","severity":1,"message":"243","line":24,"column":25,"nodeType":"222","messageId":"223","endLine":24,"endColumn":44},{"ruleId":"220","severity":1,"message":"244","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"245","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":30},{"ruleId":"220","severity":1,"message":"246","line":2,"column":28,"nodeType":"222","messageId":"223","endLine":2,"endColumn":37},{"ruleId":"216","replacedBy":"247"},{"ruleId":"218","replacedBy":"248"},{"ruleId":"220","severity":1,"message":"249","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":14},{"ruleId":"220","severity":1,"message":"250","line":46,"column":9,"nodeType":"222","messageId":"223","endLine":46,"endColumn":15},{"ruleId":"220","severity":1,"message":"251","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"252","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":21},{"ruleId":"220","severity":1,"message":"253","line":4,"column":22,"nodeType":"222","messageId":"223","endLine":4,"endColumn":37},{"ruleId":"220","severity":1,"message":"254","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":19},{"ruleId":"220","severity":1,"message":"255","line":5,"column":21,"nodeType":"222","messageId":"223","endLine":5,"endColumn":26},{"ruleId":"220","severity":1,"message":"256","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":26},{"ruleId":"220","severity":1,"message":"257","line":6,"column":28,"nodeType":"222","messageId":"223","endLine":6,"endColumn":39},{"ruleId":"220","severity":1,"message":"258","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":19},{"ruleId":"220","severity":1,"message":"259","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":17},{"ruleId":"220","severity":1,"message":"260","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":16},{"ruleId":"220","severity":1,"message":"256","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":26},{"ruleId":"220","severity":1,"message":"227","line":3,"column":21,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"261","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":33},{"ruleId":"220","severity":1,"message":"262","line":3,"column":35,"nodeType":"222","messageId":"223","endLine":3,"endColumn":41},{"ruleId":"220","severity":1,"message":"263","line":3,"column":43,"nodeType":"222","messageId":"223","endLine":3,"endColumn":57},{"ruleId":"220","severity":1,"message":"264","line":3,"column":59,"nodeType":"222","messageId":"223","endLine":3,"endColumn":69},{"ruleId":"220","severity":1,"message":"265","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":37},{"ruleId":"220","severity":1,"message":"266","line":1,"column":52,"nodeType":"222","messageId":"223","endLine":1,"endColumn":69},{"ruleId":"220","severity":1,"message":"267","line":4,"column":27,"nodeType":"222","messageId":"223","endLine":4,"endColumn":47},{"ruleId":"220","severity":1,"message":"268","line":4,"column":49,"nodeType":"222","messageId":"223","endLine":4,"endColumn":64},{"ruleId":"220","severity":1,"message":"269","line":4,"column":66,"nodeType":"222","messageId":"223","endLine":4,"endColumn":81},{"ruleId":"220","severity":1,"message":"257","line":5,"column":23,"nodeType":"222","messageId":"223","endLine":5,"endColumn":34},{"ruleId":"220","severity":1,"message":"254","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":19},{"ruleId":"220","severity":1,"message":"255","line":6,"column":21,"nodeType":"222","messageId":"223","endLine":6,"endColumn":26},{"ruleId":"220","severity":1,"message":"262","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":16},{"ruleId":"220","severity":1,"message":"270","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"271","line":15,"column":10,"nodeType":"222","messageId":"223","endLine":15,"endColumn":16},{"ruleId":"220","severity":1,"message":"272","line":15,"column":18,"nodeType":"222","messageId":"223","endLine":15,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":2,"column":17,"nodeType":"222","messageId":"223","endLine":2,"endColumn":26},{"ruleId":"220","severity":1,"message":"273","line":5,"column":10,"nodeType":"222","messageId":"223","endLine":5,"endColumn":18},{"ruleId":"220","severity":1,"message":"274","line":7,"column":19,"nodeType":"222","messageId":"223","endLine":7,"endColumn":27},{"ruleId":"220","severity":1,"message":"251","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":17},{"ruleId":"220","severity":1,"message":"275","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":20},{"ruleId":"220","severity":1,"message":"267","line":20,"column":10,"nodeType":"222","messageId":"223","endLine":20,"endColumn":30},{"ruleId":"220","severity":1,"message":"258","line":21,"column":10,"nodeType":"222","messageId":"223","endLine":21,"endColumn":19},{"ruleId":"220","severity":1,"message":"276","line":22,"column":10,"nodeType":"222","messageId":"223","endLine":22,"endColumn":31},{"ruleId":"220","severity":1,"message":"227","line":3,"column":21,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"261","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":33},{"ruleId":"220","severity":1,"message":"262","line":3,"column":35,"nodeType":"222","messageId":"223","endLine":3,"endColumn":41},{"ruleId":"220","severity":1,"message":"263","line":3,"column":43,"nodeType":"222","messageId":"223","endLine":3,"endColumn":57},{"ruleId":"220","severity":1,"message":"264","line":3,"column":59,"nodeType":"222","messageId":"223","endLine":3,"endColumn":69},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Button' is defined but never used.","'Grommet' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'Meter' is defined but never used.","'CureDeck' is defined but never used.","'CardHand' is defined but never used.","'SourceDeck' is defined but never used.","'MarkersStore' is defined but never used.","'MisinformationDeck' is defined but never used.","'ChaosMeter' is defined but never used.","'SpreadLevel' is defined but never used.","'PlayerPrompt' is defined but never used.","'SourceParent' is defined but never used.","'startGame' is defined but never used.","'stateRendered' is assigned a value but never used.","'updateStateRendered' is assigned a value but never used.","'combineReducers' is defined but never used.","'allGamesStateReducer' is defined but never used.","'gameState' is defined but never used.",["277"],["278"],"'join' is defined but never used.","'Iconnn' is assigned a value but never used.","'getIcon' is defined but never used.","'toCamelCase' is defined but never used.","'SourceCardProps' is defined but never used.","'RootState' is defined but never used.","'store' is defined but never used.","'DefaultRootState' is defined but never used.","'useSelector' is defined but never used.","'Gamestate' is defined but never used.","'PropTypes' is defined but never used.","'render' is defined but never used.","'Source' is defined but never used.","'Player' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'addPlayerToGameState' is defined but never used.","'StartGameAction' is defined but never used.","'updateGameState' is defined but never used.","'Console' is defined but never used.","'option' is assigned a value but never used.","'updateOption' is assigned a value but never used.","'Provider' is defined but never used.","'getGames' is defined but never used.","'SourceCard' is defined but never used.","'UpdateGameStateAction' is defined but never used.","no-global-assign","no-unsafe-negation"]