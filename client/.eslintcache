[{"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\index.tsx":"1","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\reportWebVitals.ts":"2","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\App.tsx":"3","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\StartGame.tsx":"4","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\socket-io-client\\socket-io-client.tsx":"5","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\store.tsx":"6","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\iconExporter.ts":"7","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateReducer.ts":"8","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\playerReducer.ts":"9","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\allGamesReducer.ts":"10","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateActions.ts":"11","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx":"12","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx":"13","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\sourceDeck\\sourceDeck.tsx":"14","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx":"15","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceParent\\SourceParent.tsx":"16","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CardHand\\CardHand.tsx":"17","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx":"18","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MarkersStore\\MarkersStore.tsx":"19","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\reduxTypes.ts":"20","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.MW.ts":"21","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.newState_CO.ts":"22","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\initialState.tsx":"23","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceCard\\SourceCard.tsx":"24","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\Source.tsx":"25","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\connections.ts":"26","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\utils.ts":"27","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\DebunkModal.tsx":"28","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPawn\\PlayerPawn.tsx":"29"},{"size":500,"mtime":1612784420632,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1612257024488,"results":"32","hashOfConfig":"31"},{"size":415,"mtime":1612871147980,"results":"33","hashOfConfig":"31"},{"size":6462,"mtime":1612871147997,"results":"34","hashOfConfig":"31"},{"size":2095,"mtime":1612863728950,"results":"35","hashOfConfig":"31"},{"size":706,"mtime":1612784420632,"results":"36","hashOfConfig":"31"},{"size":4317,"mtime":1612863728599,"results":"37","hashOfConfig":"31"},{"size":2987,"mtime":1612871148000,"results":"38","hashOfConfig":"31"},{"size":707,"mtime":1612863728948,"results":"39","hashOfConfig":"31"},{"size":366,"mtime":1612863728602,"results":"40","hashOfConfig":"31"},{"size":2835,"mtime":1612863728603,"results":"41","hashOfConfig":"31"},{"size":377,"mtime":1612809507150,"results":"42","hashOfConfig":"31"},{"size":662,"mtime":1612809634649,"results":"43","hashOfConfig":"31"},{"size":349,"mtime":1612809507268,"results":"44","hashOfConfig":"31"},{"size":1512,"mtime":1612809634644,"results":"45","hashOfConfig":"31"},{"size":940,"mtime":1612871147997,"results":"46","hashOfConfig":"31"},{"size":1227,"mtime":1612863728537,"results":"47","hashOfConfig":"31"},{"size":2702,"mtime":1612863728539,"results":"48","hashOfConfig":"31"},{"size":738,"mtime":1612863728538,"results":"49","hashOfConfig":"31"},{"size":3004,"mtime":1612863728949,"results":"50","hashOfConfig":"31"},{"size":10470,"mtime":1612883979267,"results":"51","hashOfConfig":"31"},{"size":13719,"mtime":1612884566929,"results":"52","hashOfConfig":"31"},{"size":1523,"mtime":1612863728603,"results":"53","hashOfConfig":"31"},{"size":1759,"mtime":1612809634696,"results":"54","hashOfConfig":"31"},{"size":6207,"mtime":1612884010331,"results":"55","hashOfConfig":"31"},{"size":2989,"mtime":1612873882858,"results":"56","hashOfConfig":"31"},{"size":556,"mtime":1612863728600,"results":"57","hashOfConfig":"31"},{"size":1377,"mtime":1612871147995,"results":"58","hashOfConfig":"31"},{"size":674,"mtime":1612809634649,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"llu8q6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\index.tsx",[],["128","129"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\reportWebVitals.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\App.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\StartGame.tsx",["130","131","132","133","134","135","136","137","138","139","140"],"\nimport React, { useEffect, useState } from 'react';\n// import { Box, Button, Grommet, Card, CardHeader, CardBody, CardFooter, Meter } from 'grommet';\n// import { Notification } from 'grommet-icons';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { RootState, store } from '../redux/gameState/store';\nimport { getGame, getGames, joinRoom } from '../socket-io-client/socket-io-client';\nimport { CureDeck } from '../components/CureDeck/CureDeck';\nimport { getIcon } from '../helpers/iconExporter'\nimport { SourceCard } from '../components/SourceCard/SourceCard';\nimport { CardHand } from '../components/CardHand/CardHand';\nimport { SourceDeck } from '../components/sourceDeck/sourceDeck'\nimport { MarkersStore } from '../components/MarkersStore/MarkersStore'\nimport { MisinformationDeck } from '../components/MisinformationDeck/misinformationDeck'\nimport { ChaosMeter } from '../components/ChaosMeter/ChaosMeter'\nimport { SpreadLevel } from '../components/SpreadLevel/SpreadLevel';\nimport { PlayerPrompt } from '../components/PlayerPrompt/PlayerPrompt';\nimport { SourceParent } from '../components/SourceParent/SourceParent';\nimport { NewGameMenu } from '../components/NewGameMenu/NewGameMenu'\nimport { addPlayerToGameState, StartGameAction } from '../redux/gameState/gameStateActions';\nimport { Gamestate, Player } from '../types/gameStateTypes';\nimport { UpdateGameStateAction } from '../redux/gameState/reduxTypes';\n\n\n\nexport const StartGame: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n  // const [showSidebar, setShowSidebar] = useState(false);\n  const player = useSelector((state: RootState) => state.playerStateReducer)\n  const allRooms = useSelector((state: RootState) => state.allGamesStateReducer)\n  const [stateRendered, updateStateRendered] = useState(false)\n  // let gameOn: boolean = false;\n  const state = useSelector((state: RootState) => state.gameStateReducer)\n\n  const startGame = (player: Player) => {\n    if (!stateRendered) {\n      joinRoom(player)\n      if (allRooms.filter(room => room === player.room).length > 0) {\n        getGame(player);\n        updateStateRendered(true)\n      } else {\n        dispatch(StartGameAction([player]))\n        updateStateRendered(true)\n      }\n    }\n  }\n\n\n  const MapSVG = getIcon('map');\n  // const addPlayer = () => {\n  //   dispatch(addPlayerToGameState(player, gamestate))\n  // }\n\n  return (\n    <div>\n      {\n        (player.name.length < 1) ?\n          <NewGameMenu />\n          : (\n            (!stateRendered) ?\n              <h1>\n                game loading ...\n          {startGame(player)}\n              </h1>\n              :\n              (stateRendered && state.gameOn) &&\n              <div className=\"app-outer-wrapper\">\n                <div className=\"app-container\">\n                  {/* <Map /> */}\n                  {/* <GameBoard /> */}\n                  <div className=\"sidebar-left\">\n                    <CardHand />\n                    <PlayerPrompt />\n                  </div>\n                  <div className=\"board-container\">\n\n                    <div id=\"game-board\">\n                      {/* <MapSVG className=\"map-svg\"/> */}\n                      <SourceParent />\n                    </div>\n\n                    <ChaosMeter />\n            <SourceDeck />\n            <MisinformationDeck />\n            <MarkersStore />\n            {/* <ChaosMeterGrommet /> */}\n            {/* <OtherPlayer /> */}\n            {/* </Grommet> */ }\n                  </div>\n                </div>\n              </div>\n          )\n      }\n    </div>\n\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { Box, Button, Grommet, Card, CardHeader, CardBody, CardFooter, Meter } from 'grommet';\n// // import { Notification } from 'grommet-icons';\n// import './App.scss';\n// import './socket-io-client/socket-io-client';\n// import { Provider } from 'react-redux';\n// import { store } from './redux/gameState/store';\n// import { getGames } from './socket-io-client/socket-io-client';\n// import { CureDeck } from './components/CureDeck/CureDeck';\n// import { getIcon } from './helpers/iconExporter'\n// import { SourceCard } from './components/SourceCard/SourceCard';\n// import { CardHand } from './components/CardHand/CardHand';\n// import { SourceDeck } from './components/sourceDeck/sourceDeck'\n// import { MarkersStore } from './components/MarkersStore/MarkersStore'\n// import { MisinformationDeck } from './components/MisinformationDeck/misinformationDeck'\n// import { ChaosMeter } from './components/ChaosMeter/ChaosMeter'\n// import { SpreadLevel } from './components/SpreadLevel/SpreadLevel';\n// import { PlayerPrompt } from './components/PlayerPrompt/PlayerPrompt';\n// import { SourceParent } from './components/SourceParent/SourceParent';\n// import { ChaosMeterGrommet } from './components/ChaosMeter_Grommet/ChaosMeter_Grommet'\n// import { OtherPlayer } from './components/OtherPlayer/OtherPlayer';\n// import { connections } from './types/connections'\n// // import './assets/allIcons/game-board-without-sources.svg';\n\n\n\n\n\n\n// function App () {\n\n//   const [showSidebar, setShowSidebar] = useState(false);\n\n//   useEffect(() => {\n//     getGames();\n//   }, []);\n\n//   const MapSVG = getIcon('map');\n\n//   const fakePlayer1 = {\n//     name: 'Konstantin',\n//     // id: '5678',\n//     cards: [\n//       connections[Math.floor(Math.random() * (connections.length - 1))],\n//     ],\n//     cardHandFull: false,\n//     isCurrent: false,\n//     pawnColor: 'fuchsia',\n//     currentSource: 'University'\n//   }\n\n//   return (\n//     // <Grommet theme={grommet} full>\n//     <Provider store={store}>\n//       <div className=\"app-outer-wrapper\">\n//         <div className=\"app-container\">\n//           {/* <Map /> */}\n//           {/* <GameBoard /> */}\n//           <div className=\"sidebar-left\">\n//             <CardHand />\n//             <PlayerPrompt />\n//           </div>\n//           <div className=\"board-container\">\n\n//             <div id=\"game-board\">\n//               {/* <MapSVG className=\"map-svg\"/> */}\n//               <SourceParent />\n//             </div>\n\n//             {/* <ChaosMeter />\n//             <SourceDeck />\n//             <MisinformationDeck />\n//             <MarkersStore />\n//             <ChaosMeterGrommet />\n//             <OtherPlayer />\n//             // {/* </Grommet> */ }\n//           </div>\n//         </div>\n//       </div>\n//     </Provider>\n//   );\n// }\n\n// export default App;\n","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\socket-io-client\\socket-io-client.tsx",["141"],"//based on change of state \nimport io from \"socket.io-client\";\nimport * as dotenv from 'dotenv';\nimport { store } from '../redux/gameState/store'\nimport { addPlayerToGameState, GetAllGamesAction, updateGameState } from \"../redux/gameState/gameStateActions\";\nimport { Gamestate } from \"../types/gameStateTypes\";\ndotenv.config({ path: __dirname + '/.env' });\n//connection to the server\ndotenv.config({ path: __dirname + '../.env' });\nconst socket = io(process.env.SERVER_URL || 'http://localhost:3002');\n\n\nconst Player = store.getState().playerStateReducer\n\n// on click - 'start game' \nexport const joinRoom = (player: typeof Player) => {\n  socket.emit('joinRoom', player);\n}\n\n// Message from server // welcome component \nsocket.on('joinConfirmation', (message: string) => {\n  console.log(message); // display message to the screen \n\n});\n\n//subscripion to any game state changes \n\nstore.subscribe(() => {\n  const newState = store.getState().gameStateReducer\n  const Player = store.getState().playerStateReducer\n  console.log(newState, 'NEW STATE FROM SUBSCRIVE ')\n  if (!newState.received && Player && newState.gameOn) {\n    socket.emit('onChangeState', { newState, Player })\n  }\n})\n\n// const addPlayer = (player: typeof Player) => {\n//   socket.emit('addPlayerToGame', player)\n// }\n\n\n//data coming from backend after game state changed\nsocket.on('updatedState', (newState: Gamestate) => {\n  console.log('newstate from client ', newState)\n  newState.received = true;\n  store.dispatch(updateGameState(newState))\n})\n\nexport const getGame = (player: typeof Player) => {\n  player && socket.emit('retriveGame', player)\n\n}\n\n// // on click when user wants to restart game \n// export const restartGame = (player:typeof Player) => {\n//   joinRoom(player);\n//   socket.emit('resumeGame', { Player })\n// }\n\nexport const getGames = () => {\n  socket.emit('getGames')\n  socket.on('games', (\n    (data: string[]) => {\n      store.dispatch(GetAllGamesAction(data))\n    }\n  ))\n}\ngetGames();\n\n\n\n// how to we tell the users \nsocket.on('userLeft', (message: string) => console.log(message)) // need a end game button ","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\store.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\iconExporter.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateReducer.ts",["142","143","144"],"import { initDummyState } from './../../logic/dummyState.REDO_CO';\nimport { ADD_PLAYER_TO_GAME, CLEAR_MISINFO, DEBUNK_MISINFO, DISCARD_ACTION, GameStateActionTypes, LOG_ON_OFF, MOVE_ACTION, SHARE_CARD, START_GAME, UPDATE_GAME_STATE } from './reduxTypes';\nimport { initDummyState as gameState } from '../../logic/dummyState.REDO_CO'\nimport { initialState } from './initialState'\nimport { Gamestate } from '../../types/gameStateTypes'\nimport { clearMisinfo, debunkMisinfo, discardCard, logOnOff, moveAction, shareCard } from '../../logic/actions.newState_CO'\nimport { addPlayerToGame, setUp } from '../../logic/actions.MW';\nimport { Console } from 'console';\n//here should be a initial State of the Game\nconst GameState: Gamestate = initialState;\n// const GameState: Gamestate = gameState;\n\nexport function gameStateReducer(\n  state = GameState,\n  action: GameStateActionTypes\n): Gamestate {\n  switch (action.type) {\n    case MOVE_ACTION: {\n      const ap = action.payload;\n      const newstate = moveAction(ap.oldState, ap.currentPlayerID, ap.location)\n      return { ...state, ...newstate, received: false };\n    }\n    case CLEAR_MISINFO: {\n      const ap = action.payload;\n      // return {...clearMisinfo(ap.oldState, ap.currentPlayerID, ap.misinfoType, ap.location),  ...state, received: false }}\n      const newState = { ...state, received: false }\n      return { ...newState, ...clearMisinfo(ap.oldState, ap.currentPlayerID, ap.misinfoType, ap.location) }\n    }\n\n    case SHARE_CARD: {\n      const ap = action.payload;\n      const newstate = shareCard(ap.oldState, ap.currentPlayerID, ap.recipient, ap.sharedCard)\n      return { ...state, ...newstate, received: false };\n    }\n    case LOG_ON_OFF: {\n      const ap = action.payload;\n      const newstate = logOnOff(ap.oldState, ap.currentPlayerID, ap.location, ap.usedCard)\n      return { ...state, ...newstate, received: false };\n    }\n    case DEBUNK_MISINFO: {\n      const ap = action.payload;\n      const newstate = debunkMisinfo(ap.oldState, ap.currentPlayerID, ap.usedCards, ap.misinfoType)\n      return { ...state, ...newstate, received: false };\n    }\n    case DISCARD_ACTION: {\n      const ap = action.payload;\n      const newstate = discardCard(ap.oldState, ap.currentPlayerID, ap.discardedCard)\n      return { ...state, ...newstate, received: false };\n    }\n\n    case UPDATE_GAME_STATE:\n      return {\n        ...state, ...action.payload\n      }\n\n    case ADD_PLAYER_TO_GAME: {\n      const ap = action.payload;\n      console.log('state before add player', state)\n      const newState = addPlayerToGame(ap.player, state)\n      console.log(newState, 'new state from add player reducer ')\n      return newState\n    }\n    case START_GAME: {\n      const initialState = setUp(action.payload)\n      console.log('it gets here - START GAME REDUCER')\n      const obj = { ...state, ...initialState, gameOn: true, received: false }\n      console.log('obj - AFTER UPDATE', obj)\n      return obj\n\n    }\n    default: return state\n  }\n}\n","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\playerReducer.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateActions.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\sourceDeck\\sourceDeck.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceParent\\SourceParent.tsx",["145","146","147"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { SourceComponent  } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\nimport {useSelector} from 'react-redux'\nimport { RootState } from '../../redux/gameState/store'\nimport './SourceParent.scss'\n\nexport const SourceParent = () => {\n  // const sources = initDummyState.sources;\n  const sources = useSelector((state: RootState) => state.gameStateReducer.sources);\n\n\n  // use the\n\n  const renderSources = (srcArr: Source[]) => {\n    \n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n\n\n      return <SourceComponent source={source} key={source.name}/>\n    })\n  }\n\n  return (\n    <div id=\"source-parent-grid-container\">\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CardHand\\CardHand.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\NewGameMenu\\NewGameMenu.tsx",["148","149","150","151","152","153","154","155","156","157","158","159"],"import React, { ButtonHTMLAttributes, ChangeEvent, DetailedHTMLProps, useState } from 'react';\nimport './NewGameMenu.css';\n// import { startGameEvent, addPlayerEvent } from '../../logic/event.listeners'\nimport { AddPlayerAction, addPlayerToGameState, StartGameAction, updateGameState } from '../../redux/gameState/gameStateActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, store } from '../../redux/gameState/store';\nimport { Player } from '../../types/gameStateTypes';\nimport { Console } from 'console';\n\n\nexport const NewGameMenu: React.FC = () => {\n  const [input, updateName] = useState({ name: '', color: '', room: '' })\n  // const [Room, updateRoom] = useState('')\n  const dispatch = useDispatch();\n  const [option, updateOption] = useState(true)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.preventDefault()\n    if (event.target) {\n      updateName(state => ({\n        ...state,\n        [event.target.name]: event.target.value\n      }))\n    }\n\n  }\n\n\n\n  const addPlayer = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    dispatch(AddPlayerAction(input.name, input.color, input.room))\n    \n  }\n\n\n  // const selectRoom = (e: React.ChangeEvent<HTMLSelectElement>) => {\n  //   console.log(e.target.value);\n  //   updateRoom(e.target.value);\n  // }\n\n  return (\n    <form className='form' >\n      <div className='menu-container'>\n        <div className='title-container'>\n          <h3>Welcome</h3>\n        </div>\n        <input\n          type='text'\n          name='name'\n          value={input.name}\n          placeholder='player name...'\n          onChange={handleChange}\n        ></input>\n\n        <input\n          type='text'\n          name='color'\n          value={input.color}\n          placeholder='color'\n          onChange={handleChange}\n        >\n        </input>\n\n        <input\n          type='text'\n          name='room'\n          value={input.room}\n          placeholder='room name'\n          onChange={handleChange}\n\n        ></input>\n        <input\n          type='text'\n          name='number of players'\n          placeholder='1 - 4 players...'\n        ></input>\n        {/* \n        <select\n          placeholder='select room'\n          value={Room}\n          onChange={selectRoom}>\n          {(rooms.length > 0) ?\n            rooms.map(room =>\n              <option value={`${room}`} id='room-options'>\n                {room}\n              </option>) :\n            <option> Start new game</option>\n          }\n        </select> */}\n\n        <button className='start_game_button' type='submit' onClick={addPlayer} >\n          Play\n        </button>\n      </div>\n    </form>\n  );\n};","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MarkersStore\\MarkersStore.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.MW.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.newState_CO.ts",["160","161","162","163"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\initialState.tsx",["164","165","166","167","168"],"// this initial state presumes 2 players, 3 locations (one for each color), 3 connection and 3 misinfo cards, and 1 viral card.\n\nimport { Gamestate, Card, Source, Player, Misinformation, Connection } from '../../types/gameStateTypes'\n\nexport const initialState: Gamestate = {\n  sources: [\n  \n  ],\n  players: [\n  ],\n  spreadLevel: 1,\n  chaosMeter: 0,\n  misinformation: {\n    community: {\n      name: 'Misinfo Type 1',\n      debunked: false,\n      markersLeft: 16,\n    },\n    social: {\n      name: 'Misinfo Type 2',\n      debunked: false,\n      markersLeft: 16,\n    },\n    relations: {\n      name: 'Misinfo Type 3',\n      debunked: false,\n      markersLeft: 16,\n    },\n  },\n  connectionDeck: [\n    {\n      cardType: 'connection',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'connection',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n    {\n      cardType: 'viral',\n    },\n  ],\n  misinformationDeckActive: [\n    {\n      cardType: 'misinformation',\n      sourceName: 'University',\n      misinfoType: 'blue',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Gym',\n      misinfoType: 'red',\n    },\n    {\n      cardType: 'misinformation',\n      sourceName: 'Instagram',\n      misinfoType: 'yellow',\n    },\n  ],\n  misinformationDeckPassive: [],\n  turnMovesLeft: 4,\n  dealHistory: 0,\n  gameWon: false,\n  gameLost: false,\n  received: false,\n  gameOn:false\n}","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceCard\\SourceCard.tsx",["169","170","171"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase, toPascalCase } from '../../helpers/utils'\nimport './SourceCard.scss'\nimport { shareCardEvent } from '../../logic/event.listeners';\nimport { ShareCardProps } from '../../redux/gameState/reduxTypes'\n\n//! issue with \"Card\" interface beings used for both Source/connection & \"Viral\" cards, which have name type \"null\" - possible change types/logic later\nexport interface SourceCardProps {\n  name: string,    //! NULL TO BE REMOVED\n  category: string, //! NULL TO BE REMOVED\n  canShare: any[]\n}\n// DON'T NEED ===> canlogon can go to the place if you have that card\n// canShare: a button that appears on each card when you are on the same location as another player\n// canchare: Player[]\n\n\nexport const SourceCard: React.FC<SourceCardProps> = ({ name, category, canShare }: SourceCardProps) => { // SVGIcon\n\n  const currentState = {}\n\n  const SVGIcon = getIcon(toCamelCase(name) + 'Icon');\n\n  const handleShareClick = (id: string) => {\n    //DISPATCH ACTION\n    console.log(`SHARING CARD ${name} WITH ${id}`);\n  }\n\n\n  const renderShareButtons = (shareWith: { name: string, id: string }[]) => {\n    return shareWith.map(player => <button onClick={() => handleShareClick(player.id)\n\n      // shareCardEvent({\n      //   oldState: currentState,\n      //   currentPlayerID: ,\n      //   recipient: player.id,\n      //   sharedCard: name\n      // })\n    }>{player.name}</button>)\n  }\n  return (\n    <div className={`source-card-container ${category}`} >\n      <SVGIcon name={name} className=\"card-icon\" />\n      <div className=\"name-container\" >\n        <p className=\"title\">{toPascalCase(name)}</p>\n        {renderShareButtons(canShare)}\n      </div>\n    </div>\n  )\n}","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\Source.tsx",["172","173","174","175","176","177","178"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\connections.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\utils.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\DebunkModal.tsx",["179","180","181","182","183","184"],"import React from 'react';\nimport Modal from 'react-modal';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/gameState/store';\nimport { SourceCard } from '../SourceCard/SourceCard';\nimport ReactDOM from 'react-dom';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\n\ninterface ModalProps {\n  modalIsOpen: boolean,\n  setIsOpen: Function,\n  setselectedDebunkCards: Function\n}\n\nexport function ModalComponent({ modalIsOpen, setIsOpen, setselectedDebunkCards }: ModalProps) {\n  const currentPlayerCards = useSelector((state: RootState) => state.playerStateReducer.cards)\n\n  const gameState = useSelector((state: RootState) => state.gameStateReducer)\n\n\n\n\n  const fakeCards = ['Card 1', 'Card 2', 'Card 3']\n\n\n  var subtitle: any;\n\n\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        {fakeCards.map(card => <div>{card}</div>)}\n      </Modal>\n    </div>\n  );\n}","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPawn\\PlayerPawn.tsx",["185","186","187","188"],"// import React from 'react';\nimport React from 'react';\n// also exported from '@storybook/react' if you can deal with breaking changes in 6.1\nimport { Story, Meta } from '@storybook/react/types-6-0';\nimport './PlayerPawn.css';\nimport { withDesign } from 'storybook-addon-designs';\nimport { useSelector } from 'react-redux';\n// import {RootState} from '../../redux/gameState/store'\n\nexport interface PlayerPawnProps {\n  player: string;\n  colour: string;\n}\n\nexport const PlayerPawn: React.FC<PlayerPawnProps> = ({\n  player,\n  colour,\n}: PlayerPawnProps) => {\n  return (\n    <div className='container'>\n      <div className={`player_pawn ${colour}`}></div>\n    </div>\n  );\n};\n",{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":17,"nodeType":"195","messageId":"196","endLine":2,"endColumn":26},{"ruleId":"193","severity":1,"message":"197","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":18},{"ruleId":"193","severity":1,"message":"198","line":6,"column":21,"nodeType":"195","messageId":"196","endLine":6,"endColumn":26},{"ruleId":"193","severity":1,"message":"199","line":7,"column":19,"nodeType":"195","messageId":"196","endLine":7,"endColumn":27},{"ruleId":"193","severity":1,"message":"200","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":18},{"ruleId":"193","severity":1,"message":"201","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":20},{"ruleId":"193","severity":1,"message":"202","line":16,"column":10,"nodeType":"195","messageId":"196","endLine":16,"endColumn":21},{"ruleId":"193","severity":1,"message":"203","line":20,"column":10,"nodeType":"195","messageId":"196","endLine":20,"endColumn":30},{"ruleId":"193","severity":1,"message":"204","line":21,"column":10,"nodeType":"195","messageId":"196","endLine":21,"endColumn":19},{"ruleId":"193","severity":1,"message":"205","line":22,"column":10,"nodeType":"195","messageId":"196","endLine":22,"endColumn":31},{"ruleId":"193","severity":1,"message":"206","line":50,"column":9,"nodeType":"195","messageId":"196","endLine":50,"endColumn":15},{"ruleId":"193","severity":1,"message":"203","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":30},{"ruleId":"193","severity":1,"message":"207","line":1,"column":10,"nodeType":"195","messageId":"196","endLine":1,"endColumn":24},{"ruleId":"193","severity":1,"message":"208","line":3,"column":28,"nodeType":"195","messageId":"196","endLine":3,"endColumn":37},{"ruleId":"193","severity":1,"message":"209","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":17},{"ruleId":"193","severity":1,"message":"210","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"207","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":24},{"ruleId":"193","severity":1,"message":"211","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":16},{"ruleId":"193","severity":1,"message":"212","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":37},{"ruleId":"193","severity":1,"message":"213","line":1,"column":52,"nodeType":"195","messageId":"196","endLine":1,"endColumn":69},{"ruleId":"193","severity":1,"message":"203","line":4,"column":27,"nodeType":"195","messageId":"196","endLine":4,"endColumn":47},{"ruleId":"193","severity":1,"message":"214","line":4,"column":49,"nodeType":"195","messageId":"196","endLine":4,"endColumn":64},{"ruleId":"193","severity":1,"message":"215","line":4,"column":66,"nodeType":"195","messageId":"196","endLine":4,"endColumn":81},{"ruleId":"193","severity":1,"message":"216","line":5,"column":23,"nodeType":"195","messageId":"196","endLine":5,"endColumn":34},{"ruleId":"193","severity":1,"message":"217","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":19},{"ruleId":"193","severity":1,"message":"198","line":6,"column":21,"nodeType":"195","messageId":"196","endLine":6,"endColumn":26},{"ruleId":"193","severity":1,"message":"218","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":16},{"ruleId":"193","severity":1,"message":"209","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":17},{"ruleId":"193","severity":1,"message":"219","line":15,"column":10,"nodeType":"195","messageId":"196","endLine":15,"endColumn":16},{"ruleId":"193","severity":1,"message":"220","line":15,"column":18,"nodeType":"195","messageId":"196","endLine":15,"endColumn":30},{"ruleId":"193","severity":1,"message":"221","line":1,"column":26,"nodeType":"195","messageId":"196","endLine":1,"endColumn":35},{"ruleId":"193","severity":1,"message":"222","line":2,"column":27,"nodeType":"195","messageId":"196","endLine":2,"endColumn":40},{"ruleId":"193","severity":1,"message":"223","line":4,"column":9,"nodeType":"195","messageId":"196","endLine":4,"endColumn":19},{"ruleId":"193","severity":1,"message":"224","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":28},{"ruleId":"193","severity":1,"message":"225","line":3,"column":21,"nodeType":"195","messageId":"196","endLine":3,"endColumn":25},{"ruleId":"193","severity":1,"message":"226","line":3,"column":27,"nodeType":"195","messageId":"196","endLine":3,"endColumn":33},{"ruleId":"193","severity":1,"message":"218","line":3,"column":35,"nodeType":"195","messageId":"196","endLine":3,"endColumn":41},{"ruleId":"193","severity":1,"message":"227","line":3,"column":43,"nodeType":"195","messageId":"196","endLine":3,"endColumn":57},{"ruleId":"193","severity":1,"message":"228","line":3,"column":59,"nodeType":"195","messageId":"196","endLine":3,"endColumn":69},{"ruleId":"193","severity":1,"message":"229","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":24},{"ruleId":"193","severity":1,"message":"230","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":24},{"ruleId":"193","severity":1,"message":"231","line":21,"column":9,"nodeType":"195","messageId":"196","endLine":21,"endColumn":21},{"ruleId":"193","severity":1,"message":"232","line":4,"column":23,"nodeType":"195","messageId":"196","endLine":4,"endColumn":34},{"ruleId":"193","severity":1,"message":"233","line":7,"column":30,"nodeType":"195","messageId":"196","endLine":7,"endColumn":49},{"ruleId":"193","severity":1,"message":"234","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":18},{"ruleId":"193","severity":1,"message":"235","line":29,"column":10,"nodeType":"195","messageId":"196","endLine":29,"endColumn":29},{"ruleId":"193","severity":1,"message":"236","line":107,"column":9,"nodeType":"195","messageId":"196","endLine":107,"endColumn":19},{"ruleId":"193","severity":1,"message":"237","line":113,"column":9,"nodeType":"195","messageId":"196","endLine":113,"endColumn":22},{"ruleId":"193","severity":1,"message":"238","line":124,"column":9,"nodeType":"195","messageId":"196","endLine":124,"endColumn":15},{"ruleId":"193","severity":1,"message":"201","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":20},{"ruleId":"193","severity":1,"message":"239","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":16},{"ruleId":"193","severity":1,"message":"240","line":27,"column":9,"nodeType":"195","messageId":"196","endLine":27,"endColumn":27},{"ruleId":"193","severity":1,"message":"241","line":29,"column":9,"nodeType":"195","messageId":"196","endLine":29,"endColumn":18},{"ruleId":"193","severity":1,"message":"242","line":37,"column":7,"nodeType":"195","messageId":"196","endLine":37,"endColumn":20},{"ruleId":"193","severity":1,"message":"243","line":41,"column":12,"nodeType":"195","messageId":"196","endLine":41,"endColumn":21},{"ruleId":"193","severity":1,"message":"244","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":15},{"ruleId":"193","severity":1,"message":"245","line":4,"column":17,"nodeType":"195","messageId":"196","endLine":4,"endColumn":21},{"ruleId":"193","severity":1,"message":"246","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":20},{"ruleId":"193","severity":1,"message":"216","line":7,"column":10,"nodeType":"195","messageId":"196","endLine":7,"endColumn":21},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'getGames' is defined but never used.","'CureDeck' is defined but never used.","'SourceCard' is defined but never used.","'SpreadLevel' is defined but never used.","'addPlayerToGameState' is defined but never used.","'Gamestate' is defined but never used.","'UpdateGameStateAction' is defined but never used.","'MapSVG' is assigned a value but never used.","'initDummyState' is defined but never used.","'gameState' is defined but never used.","'Console' is defined but never used.","'PropTypes' is defined but never used.","'render' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","'DetailedHTMLProps' is defined but never used.","'StartGameAction' is defined but never used.","'updateGameState' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'Player' is defined but never used.","'option' is assigned a value but never used.","'updateOption' is assigned a value but never used.","'ViralCard' is defined but never used.","'playViralCard' is defined but never used.","'viralCheck' is defined but never used.","'MisinformationDeck' is defined but never used.","'Card' is defined but never used.","'Source' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.","'shareCardEvent' is defined but never used.","'ShareCardProps' is defined but never used.","'currentState' is assigned a value but never used.","'toKebabCase' is defined but never used.","'debunkMisinfoAction' is defined but never used.","'logOnOff' is defined but never used.","'selectedDebunkCards' is assigned a value but never used.","'renderIcon' is assigned a value but never used.","'renderAsLogOn' is assigned a value but never used.","'Iconnn' is assigned a value but never used.","'ReactDOM' is defined but never used.","'currentPlayerCards' is assigned a value but never used.","'gameState' is assigned a value but never used.","'subtitle' is defined but never used.","'openModal' is defined but never used.","'Story' is defined but never used.","'Meta' is defined but never used.","'withDesign' is defined but never used.","no-global-assign","no-unsafe-negation"]