[{"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\index.tsx":"1","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\reportWebVitals.ts":"2","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\App.tsx":"3","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\types\\connections.ts":"4","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\socket-io-client\\socket-io-client.tsx":"5","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\store.tsx":"6","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx":"7","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\OtherPlayer\\OtherPlayer.tsx":"8","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx":"9","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx":"10","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CardHand\\CardHand.tsx":"11","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MarkersStore\\MarkersStore.tsx":"12","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\sourceDeck\\sourceDeck.tsx":"13","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceParent\\SourceParent.tsx":"14","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter_Grommet\\ChaosMeter_Grommet.tsx":"15","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateActions.ts":"16","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\playerReducer.ts":"17","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateReducer.ts":"18","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\allGamesReducer.ts":"19","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\iconExporter.ts":"20","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\utils.ts":"21","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceCard\\SourceCard.tsx":"22","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\Source.tsx":"23","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\reduxTypes.ts":"24","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.MW.ts":"25","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\dummyState.REDO_CO.ts":"26","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.newState_CO.ts":"27","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\connections.ts":"28","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx":"29","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CureDeck\\CureDeck.tsx":"30"},{"size":500,"mtime":1612784420632,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1612257024488,"results":"33","hashOfConfig":"32"},{"size":2742,"mtime":1612807551360,"results":"34","hashOfConfig":"32"},{"size":2978,"mtime":1612543802257,"results":"35","hashOfConfig":"32"},{"size":1710,"mtime":1612720750665,"results":"36","hashOfConfig":"32"},{"size":706,"mtime":1612784420632,"results":"37","hashOfConfig":"32"},{"size":662,"mtime":1612720750650,"results":"38","hashOfConfig":"32"},{"size":2148,"mtime":1612720750650,"results":"39","hashOfConfig":"32"},{"size":377,"mtime":1612784420624,"results":"40","hashOfConfig":"32"},{"size":1389,"mtime":1612784420621,"results":"41","hashOfConfig":"32"},{"size":1142,"mtime":1612784420619,"results":"42","hashOfConfig":"32"},{"size":731,"mtime":1612784420623,"results":"43","hashOfConfig":"32"},{"size":349,"mtime":1612784420631,"results":"44","hashOfConfig":"32"},{"size":936,"mtime":1612807551031,"results":"45","hashOfConfig":"32"},{"size":1171,"mtime":1612784420621,"results":"46","hashOfConfig":"32"},{"size":2511,"mtime":1612720750650,"results":"47","hashOfConfig":"32"},{"size":700,"mtime":1612720750665,"results":"48","hashOfConfig":"32"},{"size":1821,"mtime":1612720750665,"results":"49","hashOfConfig":"32"},{"size":350,"mtime":1612720750650,"results":"50","hashOfConfig":"32"},{"size":4397,"mtime":1612720750650,"results":"51","hashOfConfig":"32"},{"size":556,"mtime":1612784376879,"results":"52","hashOfConfig":"32"},{"size":1758,"mtime":1612784420629,"results":"53","hashOfConfig":"32"},{"size":2025,"mtime":1612807549842,"results":"54","hashOfConfig":"32"},{"size":2608,"mtime":1612720750665,"results":"55","hashOfConfig":"32"},{"size":10172,"mtime":1612720750650,"results":"56","hashOfConfig":"32"},{"size":10646,"mtime":1612803045230,"results":"57","hashOfConfig":"32"},{"size":12724,"mtime":1612720750650,"results":"58","hashOfConfig":"32"},{"size":2972,"mtime":1612543802238,"results":"59","hashOfConfig":"32"},{"size":833,"mtime":1612784420629,"results":"60","hashOfConfig":"32"},{"size":1153,"mtime":1612784420622,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"llu8q6",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\index.tsx",[],["127","128"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\reportWebVitals.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\App.tsx",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\types\\connections.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\socket-io-client\\socket-io-client.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\store.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\PlayerPrompt\\PlayerPrompt.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\OtherPlayer\\OtherPlayer.tsx",["150"],"import React from 'react';\nimport { Player } from '../../types/gameStateTypes';\nimport { getIcon } from '../../helpers/iconExporter';\nimport { toCamelCase } from '../../helpers/utils';\nimport { v4 as uuidv4 } from 'uuid';\nimport './OtherPlayer.css'\n// import { connections } from '../../../../logic/connections'\nimport { Connection } from '../../types/objects.REDO'\n\n\n\n\n// players: [\n//   {\n//     name: 'Player 1',\n//     id: '1234',\n//     cards: [],\n//     cardHandOverflow: false,\n//     isCurrent: true,\n//     pawnColor: 'green',\n//     currentSource: 'University'\n//   },\n//   {\n//     name: 'Player 2',\n//     id: '5678',\n//     cards: [],\n//     cardHandOverflow: false,\n//     isCurrent: true,\n//     pawnColor: 'purple',\n//     currentSource: 'University'\n//   },\n// ],\n\ninterface FakePlayer {\n  name: string;\n  cardHandFull: boolean;\n  cards: Connection[];\n  isCurrent: boolean;\n  pawnColor: string;\n  currentSource: string,\n}\n\nexport interface OtherPlayerProps {\n  player: FakePlayer\n}\n\n\nexport const OtherPlayer: React.FC<OtherPlayerProps> = ({ player }: OtherPlayerProps) => { // SVGIcon\n  \n  const renderCards = (): JSX.Element[] => {\n    const angle = 40;\n    const numGaps = player.cards.length - 1;\n\n    return player.cards.map((card, index, cards) => {\n      const SVGIcon: React.FunctionComponent<React.SVGProps<SVGSVGElement>> = getIcon(toCamelCase(card.name) + 'Icon');\n      const rotationAngle = (numGaps * angle / 2) + index * angle - angle*numGaps;\n      return <div className=\"displace\" style={{\n        transform: ` rotate(${rotationAngle}deg)`,\n      }}>\n        <div\n          className=\"other-player-card\"\n          key={uuidv4()}\n          style={{\n            transform: `translateY(-50%) rotate(${-rotationAngle}deg)`,\n          }}\n        >\n          <SVGIcon />\n        </div>\n      </div>;\n    })\n  }\n  return (\n    <div className={`other-player-container ${player.name}`}  >\n      <div className={`player-avatar ${player.pawnColor} ${player.isCurrent ? 'current' : ''}`}>\n        <div className=\"player-hand\">\n          {renderCards()}\n        </div>\n        <p>{player.name}</p>\n      </div>\n    </div>\n  )\n}","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MisinformationDeck\\misinformationDeck.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter\\ChaosMeter.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CardHand\\CardHand.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\MarkersStore\\MarkersStore.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\sourceDeck\\sourceDeck.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceParent\\SourceParent.tsx",["151","152","153"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { initDummyState } from '../../logic/dummyState.REDO_CO';\nimport { Source as SourceComponent } from '../Source/Source'\nimport {Source} from '../../types/gameStateTypes'\nimport { render } from '@testing-library/react';\nimport {useSelector} from 'react-redux'\nimport {RootState} from '../../redux/gameState/store'\n\nexport const SourceParent = () => {\n  //const sources = initDummyState.sources;\n  const sources=useSelector((state:RootState)=>state.gameStateReducer.sources)\n\n  const renderSources = (srcArr: Source[]) => {\n    return srcArr.map(source => {\n      //! GET source.markers_community etc and plug into props of SourceComponent\n      return <SourceComponent name={source.name} markersCommunity={3} markersRelations={1}  markersSocial={2} />\n    })\n  }\n\n  return (\n    <div id=\"map\">\n      {renderSources(sources)}\n    </div>\n  )\n}\n\n\n\n","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\ChaosMeter_Grommet\\ChaosMeter_Grommet.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateActions.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\playerReducer.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\gameStateReducer.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\allGamesReducer.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\iconExporter.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\helpers\\utils.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SourceCard\\SourceCard.tsx",["154","155","156"],"import React from 'react';\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase, toPascalCase } from '../../helpers/utils'\nimport './SourceCard.css'\nimport { shareCardEvent } from '../../logic/event.listeners';\nimport { ShareCardProps } from '../../redux/gameState/reduxTypes'\n\n//! issue with \"Card\" interface beings used for both Source/connection & \"Viral\" cards, which have name type \"null\" - possible change types/logic later\nexport interface SourceCardProps {\n  name: string,    //! NULL TO BE REMOVED\n  category: string, //! NULL TO BE REMOVED\n  canShare: any[]\n}\n// DON'T NEED ===> canlogon can go to the place if you have that card\n// canShare: a button that appears on each card when you are on the same location as another player\n// canchare: Player[]\n\n\nexport const SourceCard: React.FC<SourceCardProps> = ({ name, category, canShare }: SourceCardProps) => { // SVGIcon\n\n  const currentState = {}\n\n  const SVGIcon = getIcon(toCamelCase(name) + 'Icon');\n\n  const handleShareClick = (id: string) => {\n    //DISPATCH ACTION\n    console.log(`SHARING CARD ${name} WITH ${id}`);\n  }\n\n\n  const renderShareButtons = (shareWith: { name: string, id: string }[]) => {\n    return shareWith.map(player => <button onClick={() => handleShareClick(player.id)\n\n      // shareCardEvent({\n      //   oldState: currentState,\n      //   currentPlayerID: ,\n      //   recipient: player.id,\n      //   sharedCard: name\n      // })\n    }>{player.name}</button>)\n  }\n  return (\n    <div className={`source-card-container ${category}`} >\n      <SVGIcon name={name} className=\"card-icon\" />\n      <div className=\"name-container\" >\n        <p className=\"title\">{toPascalCase(name)}</p>\n        {renderShareButtons(canShare)}\n      </div>\n    </div>\n  )\n}","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\Source\\Source.tsx",["157"],"import React from 'react';\n\nimport { getIcon } from '../../helpers/iconExporter'\nimport { toCamelCase, toKebabCase } from '../../helpers/utils';\n\n\nexport interface SourceProps {\n  name: string,\n  markersCommunity: number,\n  markersSocial: number,\n  markersRelations: number,\n}\n\n\nexport const Source: React.FC<SourceProps> = ({ name, markersCommunity, markersSocial, markersRelations }: SourceProps) => { // SVGIcon\n  \n  \n  \n  console.log('THIS IS THE NAME::::::: ', toCamelCase(name));\n  const SVGIconSource: React.FunctionComponent<React.SVGProps<SVGSVGElement>> = getIcon(toCamelCase(name) + 'Icon');\n\n\n  const getMarker = (category: string, num: number) => {\n    if (num > 0) {\n      console.log(toCamelCase(`marker ${category} ${num}`))\n      const Icon = getIcon(toCamelCase(`marker ${category} ${num}`));\n      return <Icon />;\n    }\n  }\n\n  const Iconnn = getIcon('markerRelations3');\n\n  return (\n      <div className={`source-container ${toKebabCase(name)}`} >\n        <SVGIconSource />\n        <div className=\"markersContainer\">\n          {getMarker('community', markersCommunity)}\n          {getMarker('social', markersSocial)}\n          {getMarker('relations', markersRelations)}\n        </div>\n      </div>\n  )\n}\n\n// highlighted to show canMove, canLogon (single source which), canLogoff\n\n// 3 markers & can clear?\n\n// pawn <-- use otherPlayer, (canShare in otherPlayer)\n\n// canMove: white transparent overlay (AWAY LOCATION)\n// canLogon: blue border? (AWAY LOCATION)\n// canLogoff: green border? (AWAY LOCATION)\n// canLogon and Logoff: split blue/green border (AWAY LOCATION)\n\n// with social marker: red dot on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with community marker: yellow triangle on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)\n// with relations marker: blue square on corner w/ number 1,2,3 (BOTH CURRENT & AWAY)\n//    canClear that marker: slow flashing (CURRENT LOCATION)","E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\redux\\gameState\\reduxTypes.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.MW.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\dummyState.REDO_CO.ts",["158","159","160","161","162"],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\actions.newState_CO.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\logic\\connections.ts",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\SpreadLevel\\SpreadLevel.tsx",[],"E:\\chris-code\\Codeworks\\thesis_project\\Pandemic\\client\\src\\components\\CureDeck\\CureDeck.tsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"171","line":2,"column":15,"nodeType":"169","messageId":"170","endLine":2,"endColumn":21},{"ruleId":"167","severity":1,"message":"172","line":2,"column":23,"nodeType":"169","messageId":"170","endLine":2,"endColumn":30},{"ruleId":"167","severity":1,"message":"173","line":2,"column":32,"nodeType":"169","messageId":"170","endLine":2,"endColumn":36},{"ruleId":"167","severity":1,"message":"174","line":2,"column":38,"nodeType":"169","messageId":"170","endLine":2,"endColumn":48},{"ruleId":"167","severity":1,"message":"175","line":2,"column":50,"nodeType":"169","messageId":"170","endLine":2,"endColumn":58},{"ruleId":"167","severity":1,"message":"176","line":2,"column":60,"nodeType":"169","messageId":"170","endLine":2,"endColumn":70},{"ruleId":"167","severity":1,"message":"177","line":2,"column":72,"nodeType":"169","messageId":"170","endLine":2,"endColumn":77},{"ruleId":"167","severity":1,"message":"178","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":18},{"ruleId":"167","severity":1,"message":"179","line":10,"column":10,"nodeType":"169","messageId":"170","endLine":10,"endColumn":17},{"ruleId":"167","severity":1,"message":"180","line":11,"column":10,"nodeType":"169","messageId":"170","endLine":11,"endColumn":20},{"ruleId":"167","severity":1,"message":"181","line":13,"column":10,"nodeType":"169","messageId":"170","endLine":13,"endColumn":20},{"ruleId":"167","severity":1,"message":"182","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":22},{"ruleId":"167","severity":1,"message":"183","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":28},{"ruleId":"167","severity":1,"message":"184","line":16,"column":10,"nodeType":"169","messageId":"170","endLine":16,"endColumn":20},{"ruleId":"167","severity":1,"message":"185","line":17,"column":10,"nodeType":"169","messageId":"170","endLine":17,"endColumn":21},{"ruleId":"167","severity":1,"message":"186","line":20,"column":10,"nodeType":"169","messageId":"170","endLine":20,"endColumn":27},{"ruleId":"167","severity":1,"message":"187","line":21,"column":10,"nodeType":"169","messageId":"170","endLine":21,"endColumn":21},{"ruleId":"167","severity":1,"message":"188","line":27,"column":10,"nodeType":"169","messageId":"170","endLine":27,"endColumn":21},{"ruleId":"167","severity":1,"message":"189","line":27,"column":23,"nodeType":"169","messageId":"170","endLine":27,"endColumn":37},{"ruleId":"167","severity":1,"message":"190","line":33,"column":9,"nodeType":"169","messageId":"170","endLine":33,"endColumn":20},{"ruleId":"167","severity":1,"message":"191","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":16},{"ruleId":"167","severity":1,"message":"192","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"193","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":24},{"ruleId":"167","severity":1,"message":"194","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":16},{"ruleId":"167","severity":1,"message":"195","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":24},{"ruleId":"167","severity":1,"message":"196","line":6,"column":10,"nodeType":"169","messageId":"170","endLine":6,"endColumn":24},{"ruleId":"167","severity":1,"message":"197","line":21,"column":9,"nodeType":"169","messageId":"170","endLine":21,"endColumn":21},{"ruleId":"167","severity":1,"message":"198","line":31,"column":9,"nodeType":"169","messageId":"170","endLine":31,"endColumn":15},{"ruleId":"167","severity":1,"message":"173","line":3,"column":21,"nodeType":"169","messageId":"170","endLine":3,"endColumn":25},{"ruleId":"167","severity":1,"message":"199","line":3,"column":27,"nodeType":"169","messageId":"170","endLine":3,"endColumn":33},{"ruleId":"167","severity":1,"message":"191","line":3,"column":35,"nodeType":"169","messageId":"170","endLine":3,"endColumn":41},{"ruleId":"167","severity":1,"message":"200","line":3,"column":43,"nodeType":"169","messageId":"170","endLine":3,"endColumn":57},{"ruleId":"167","severity":1,"message":"201","line":3,"column":59,"nodeType":"169","messageId":"170","endLine":3,"endColumn":69},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Grommet' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'Meter' is defined but never used.","'CureDeck' is defined but never used.","'getIcon' is defined but never used.","'SourceCard' is defined but never used.","'SourceDeck' is defined but never used.","'MarkersStore' is defined but never used.","'MisinformationDeck' is defined but never used.","'ChaosMeter' is defined but never used.","'SpreadLevel' is defined but never used.","'ChaosMeterGrommet' is defined but never used.","'OtherPlayer' is defined but never used.","'showSidebar' is assigned a value but never used.","'setShowSidebar' is assigned a value but never used.","'fakePlayer1' is assigned a value but never used.","'Player' is defined but never used.","'PropTypes' is defined but never used.","'initDummyState' is defined but never used.","'render' is defined but never used.","'shareCardEvent' is defined but never used.","'ShareCardProps' is defined but never used.","'currentState' is assigned a value but never used.","'Iconnn' is assigned a value but never used.","'Source' is defined but never used.","'Misinformation' is defined but never used.","'Connection' is defined but never used.","no-global-assign","no-unsafe-negation"]